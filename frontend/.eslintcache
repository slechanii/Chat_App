[{"/home/slechani/chat_app/frontend/src/reportWebVitals.js":"1","/home/slechani/chat_app/frontend/src/App.js":"2","/home/slechani/chat_app/frontend/src/index.js":"3","/home/slechani/chat_app/frontend/src/Components/About.js":"4","/home/slechani/chat_app/frontend/src/Pages/Register.js":"5","/home/slechani/chat_app/frontend/src/Pages/Login.js":"6","/home/slechani/chat_app/frontend/src/Pages/Workspace.js":"7","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js":"8","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js":"9","/home/slechani/chat_app/frontend/src/Components/Chat.js":"10","/home/slechani/chat_app/frontend/src/Components/WorkspaceSideMenu.js":"11","/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js":"12","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js":"13","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js":"14","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js":"15","/home/slechani/chat_app/frontend/src/Components/Message.js":"16","/home/slechani/chat_app/frontend/src/Components/Chatbox.js":"17"},{"size":362,"mtime":1607523001563,"results":"18","hashOfConfig":"19"},{"size":615,"mtime":1608439575519,"results":"20","hashOfConfig":"19"},{"size":628,"mtime":1608439606892,"results":"21","hashOfConfig":"19"},{"size":213,"mtime":1607611994307,"results":"22","hashOfConfig":"19"},{"size":2275,"mtime":1607971464348,"results":"23","hashOfConfig":"19"},{"size":2230,"mtime":1607971620643,"results":"24","hashOfConfig":"19"},{"size":975,"mtime":1608223645580,"results":"25","hashOfConfig":"19"},{"size":2568,"mtime":1608437315465,"results":"26","hashOfConfig":"19"},{"size":1018,"mtime":1608437315466,"results":"27","hashOfConfig":"19"},{"size":2026,"mtime":1608589955298,"results":"28","hashOfConfig":"19"},{"size":484,"mtime":1607874744074,"results":"29","hashOfConfig":"19"},{"size":4832,"mtime":1608583031069,"results":"30","hashOfConfig":"19"},{"size":3836,"mtime":1607944772896,"results":"31","hashOfConfig":"19"},{"size":2418,"mtime":1608479936436,"results":"32","hashOfConfig":"19"},{"size":2242,"mtime":1608653702807,"results":"33","hashOfConfig":"19"},{"size":1596,"mtime":1608652954860,"results":"34","hashOfConfig":"19"},{"size":2907,"mtime":1608585385797,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"nhe71c",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"/home/slechani/chat_app/frontend/src/reportWebVitals.js",[],["80","81"],"/home/slechani/chat_app/frontend/src/App.js",["82","83"],"import logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './Pages/Login'; \nimport Register from './Pages/Register';\nimport Workspace from './Pages/Workspace';\nfunction App() {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/workspace\" component={Workspace} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;\n",["84","85"],"/home/slechani/chat_app/frontend/src/index.js",["86","87"],"/home/slechani/chat_app/frontend/src/Components/About.js",[],"/home/slechani/chat_app/frontend/src/Pages/Register.js",["88","89","90","91"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = {\n        username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,\n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.registerAccount(username, password)\n    }\n\n    registerAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"users/\", { username: username, password: password })\n            .then(res => {\n                localStorage.setItem(\"username\", username)\n                this.setState({redirect:true})\n            })\n            .catch(error => {\n                alert(\"Error : \" + error)\n            })\n    }\n\n    render() {\n        const { username, password, submittedUsername, submittedPassword } = this.state\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Register' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n",["92","93"],"/home/slechani/chat_app/frontend/src/Pages/Login.js",["94","95","96","97"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = { username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,}\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.loginAccount(username, password)        \n    }\n\n    loginAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"token/\", {username:username, password:password})\n        .then(res => {\n            localStorage.setItem(\"username\", username)\n            this.setState({redirect:true})\n        })\n        .catch(error => {\n            alert(\"Error : \" + error)\n        })\n    }\n\n    render() {\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        const { username, password, submittedUsername, submittedPassword } = this.state \n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Login' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Pages/Workspace.js",[],"/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js",["98","99","100"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Divider } from 'semantic-ui-react';\nimport WorkspaceName from './WorkspaceName';\nimport { VscFiles } from 'react-icons/vsc';\nimport { BsBookmark } from 'react-icons/bs';\nimport ChannelsMenu from './ChannelsMenu';\nimport { FaPlus, FaPlusSquare } from 'react-icons/fa';\nimport MessagesMenu from './MessagesMenu';\nimport Chat from './Chat';\n\nexport default class WorkspaceMenu extends Component {\n\n    state = {\n        refreshChat: false,\n    }\n\n    changeState = (name, value) => {\n        this.setState({[name]:value})\n    }\n\n    render() {\n        if (this.state.refreshChat === true){\n            this.setState({refreshChat: false})\n            this.props.changeState(\"refreshChat\", true)\n        }\n        \n        return (\n            <GridColumn className=\"workspace-menu\" width={2}>\n                <Grid>\n                    <GridRow className=\"workspace-main-row\">\n                        <GridColumn >\n                            <Divider></Divider>\n                            <WorkspaceName title=\"Your Workspace\"></WorkspaceName>\n                            <Divider></Divider>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Drafts */}\n                    <GridRow columns=\"16\" className=\"workspace-submenu-row\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <VscFiles></VscFiles>\n                        </GridColumn>\n                        <GridColumn width=\"15\">\n                            <span className=\"bold workspace-menu-text\">Drafts</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Saved Items */}\n                    <GridRow columns=\"16\" className=\"workspace-submenu-row\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <BsBookmark></BsBookmark>\n                        </GridColumn>\n                        <GridColumn width=\"15\">\n                            <span className=\"bold workspace-menu-text\">Saved items</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Channels list */}\n                    <ChannelsMenu changeState={this.changeState} ></ChannelsMenu>\n                    <MessagesMenu></MessagesMenu>\n                   \n                </Grid>\n                <GridColumn width={14}> \n                   {/* <Chat></Chat> */}\n            </GridColumn>\n            </GridColumn>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js",["101","102","103"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Icon, Button } from 'semantic-ui-react';\nimport { FaChevronDown, FaPenSquare } from 'react-icons/fa';\nimport { BsPencilSquare } from 'react-icons/bs'\n\n\nexport default class WorkspaceName extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Grid className=\"workspace-name-grid\" >\n                <GridRow columns=\"16\">\n                    <GridColumn width=\"12\" className=\"testcol\">\n                        <span className=\"bold\">{this.props.title}</span> <FaChevronDown size=\"0.75em\"></FaChevronDown>\n                    </GridColumn>\n                    <GridColumn width=\"4\" >\n\n\n                        <Button circular className=\"new-message-btn\">\n                            <BsPencilSquare color=\"#3F0E40\" size=\"1.10em\"></BsPencilSquare>\n                        </Button>\n\n                    </GridColumn>\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Chat.js",["104","105","106","107"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceSideMenu.js",["108"],"/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js",["109","110","111"],"/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js",["112","113","114","115"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaUser, FaUserAlt, FaPlus } from 'react-icons/fa';\nexport default class MessagesMenu extends Component {\n    state = {\n        activeIndex: 0,\n        hover: false,\n    };\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({hover: mouse_status})\n    }\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <GridRow columns=\"16\"  >\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title  onMouseEnter={() => {this.handleHover(true)}} onMouseLeave={() => {this.handleHover(false)}} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                           \n                        >\n                            <FaChevronDown color=\"white\"></FaChevronDown>\n                            <span className=\"bold workspace-menu-text\">Direct messages</span>\n\n                            {/* Start chat hover icon */}\n                            { this.state.hover === true &&\n                            <span className=\"menu-side-icon-container\">\n                                <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                            </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>admin</span>\n                                        <span>you</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>John</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>Jane</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaPlusSquare></FaPlusSquare></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        Send direct message\n                                    </List.Content>\n                                </List.Item>\n\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn>\n            </GridRow>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js",["116","117","118","119"],"/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js",["120","121"],"/home/slechani/chat_app/frontend/src/Components/Message.js",["122","123","124"],"/home/slechani/chat_app/frontend/src/Components/Chatbox.js",["125","126","127"],"import React, { Component } from 'react'\nimport { Grid, Input, GridRow, Container, TextArea, Button, ButtonGroup, Icon } from 'semantic-ui-react'\nimport Axios from 'axios';\nimport configData from  \"../config.json\";\n\nexport default class Chatbox extends Component {\n\n    state = {\n        messageContent : \"\",       \n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    sendMessage = () => {\n   \n        let message_to_send = {\n       \n            content: this.state.messageContent,\n            sender_id: localStorage.getItem(\"user_id\"),\n            destination_id: window.location.pathname.split('/')[2], \n        }\n      Axios.post(configData.SERVER_URL + \"messages/\", message_to_send)\n           .then((res) => {\n               this.props.refreshMessages()\n               document.getElementById(\"textarea-chat\").reset();\n               this.setState({messageContent:\"\"})\n           })\n           .catch((err) => {\n               console.log(err)\n           })\n    }\n\n    render() {\n        return (\n            <Grid.Row className=\"chatbox-container\">\n                <Grid className=\"chatbox\">\n                    <Grid.Row className=\"chatbox-textarea-row\">\n                    <form className=\"unstyled\" id=\"textarea-chat\">\n                        <TextArea  name=\"messageContent\" onChange={this.handleChange} placeholder=\"Send a message to #channel\" className=\"chatbox-input\"></TextArea>\n                    </form>\n                    </Grid.Row>\n                    <GridRow className=\"chatbox-formatting-row\">\n                        <Button.Group>\n                            <Button icon>\n                                <Icon name='bold' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='italic' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='strikethrough' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='code' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='ordered list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='bulleted list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='quote left' />\n                            </Button>\n                        </Button.Group>\n                    \n                            <Button onClick={this.sendMessage} icon>\n                                <Icon name='send' />\n                            </Button>\n                       \n\n\n                    </GridRow>\n                </Grid>\n            </Grid.Row>\n\n\n\n        )\n    }\n}\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":12},{"ruleId":"132","severity":1,"message":"136","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","severity":1,"message":"139","line":8,"column":25,"nodeType":"134","messageId":"135","endLine":8,"endColumn":30},{"ruleId":"132","severity":1,"message":"140","line":8,"column":32,"nodeType":"134","messageId":"135","endLine":8,"endColumn":38},{"ruleId":"132","severity":1,"message":"141","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"142","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":43},{"ruleId":"132","severity":1,"message":"143","line":34,"column":37,"nodeType":"134","messageId":"135","endLine":34,"endColumn":54},{"ruleId":"132","severity":1,"message":"144","line":34,"column":56,"nodeType":"134","messageId":"135","endLine":34,"endColumn":73},{"ruleId":"128","replacedBy":"145"},{"ruleId":"130","replacedBy":"146"},{"ruleId":"132","severity":1,"message":"141","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"142","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":43},{"ruleId":"132","severity":1,"message":"143","line":35,"column":37,"nodeType":"134","messageId":"135","endLine":35,"endColumn":54},{"ruleId":"132","severity":1,"message":"144","line":35,"column":56,"nodeType":"134","messageId":"135","endLine":35,"endColumn":73},{"ruleId":"132","severity":1,"message":"147","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},{"ruleId":"132","severity":1,"message":"148","line":7,"column":18,"nodeType":"134","messageId":"135","endLine":7,"endColumn":30},{"ruleId":"132","severity":1,"message":"149","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":12},{"ruleId":"132","severity":1,"message":"150","line":2,"column":37,"nodeType":"134","messageId":"135","endLine":2,"endColumn":41},{"ruleId":"132","severity":1,"message":"151","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":8,"column":5,"nodeType":"154","messageId":"155","endLine":10,"endColumn":6},{"ruleId":"132","severity":1,"message":"156","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"132","severity":1,"message":"157","line":2,"column":37,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"158","line":2,"column":46,"nodeType":"134","messageId":"135","endLine":2,"endColumn":51},{"ruleId":"132","severity":1,"message":"159","line":40,"column":13,"nodeType":"134","messageId":"135","endLine":40,"endColumn":21},{"ruleId":"160","severity":2,"message":"161","line":11,"column":22,"nodeType":"162","endLine":11,"endColumn":30},{"ruleId":"132","severity":1,"message":"163","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":12,"column":5,"nodeType":"154","messageId":"155","endLine":14,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":61,"column":26,"nodeType":"166","messageId":"167","endLine":61,"endColumn":28},{"ruleId":"132","severity":1,"message":"163","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"168","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"169","line":3,"column":50,"nodeType":"134","messageId":"135","endLine":3,"endColumn":56},{"ruleId":"164","severity":1,"message":"165","line":11,"column":26,"nodeType":"166","messageId":"167","endLine":11,"endColumn":28},{"ruleId":"132","severity":1,"message":"170","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"150","line":2,"column":40,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"171","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":31,"column":33,"nodeType":"174","endLine":31,"endColumn":132},{"ruleId":"152","severity":1,"message":"153","line":7,"column":5,"nodeType":"154","messageId":"155","endLine":10,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":58,"column":34,"nodeType":"166","messageId":"167","endLine":58,"endColumn":36},{"ruleId":"132","severity":1,"message":"163","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":5,"column":5,"nodeType":"154","messageId":"155","endLine":7,"endColumn":6},{"ruleId":"172","severity":1,"message":"173","line":26,"column":25,"nodeType":"174","endLine":26,"endColumn":132},{"ruleId":"132","severity":1,"message":"158","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"175","line":2,"column":32,"nodeType":"134","messageId":"135","endLine":2,"endColumn":41},{"ruleId":"132","severity":1,"message":"176","line":2,"column":61,"nodeType":"134","messageId":"135","endLine":2,"endColumn":72},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.",["177"],["178"],"'Route' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'GridColumn' is defined but never used.","'submittedUsername' is assigned a value but never used.","'submittedPassword' is assigned a value but never used.",["177"],["178"],"'FaPlus' is defined but never used.","'FaPlusSquare' is defined but never used.","'Chat' is defined but never used.","'Icon' is defined but never used.","'FaPenSquare' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'GridRow' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'messages' is assigned a value but never used.","react/jsx-no-undef","'VscFiles' is not defined.","JSXIdentifier","'Grid' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FaHashtag' is defined but never used.","'FaUser' is defined but never used.","'Image' is defined but never used.","'FaPause' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]