[{"/home/slechani/chat_app/frontend/src/reportWebVitals.js":"1","/home/slechani/chat_app/frontend/src/Pages/Register.js":"2","/home/slechani/chat_app/frontend/src/Components/Chat.js":"3","/home/slechani/chat_app/frontend/src/Components/Chatbox.js":"4","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js":"5","/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js":"6","/home/slechani/chat_app/frontend/src/Components/Message.js":"7","/home/slechani/chat_app/frontend/src/index.js":"8","/home/slechani/chat_app/frontend/src/Pages/Login.js":"9","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js":"10","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js":"11","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js":"12","/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js":"13","/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js":"14","/home/slechani/chat_app/frontend/src/Components/UserListModal.js":"15","/home/slechani/chat_app/frontend/src/App.js":"16","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js":"17","/home/slechani/chat_app/frontend/src/Components/DateSeparator.js":"18","/home/slechani/chat_app/frontend/src/Pages/Workspace.js":"19","/home/slechani/chat_app/frontend/src/Components/AddUsersModal.js":"20","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js":"21","/home/slechani/chat_app/frontend/src/Components/AddUserSearchbar.js":"22","/home/slechani/chat_app/frontend/src/Components/SendMessageModal.js":"23","/home/slechani/chat_app/frontend/src/Components/DirectMessageSearchbar.js":"24"},{"size":362,"mtime":1607523001563,"results":"25","hashOfConfig":"26"},{"size":2275,"mtime":1607971464348,"results":"27","hashOfConfig":"26"},{"size":3261,"mtime":1611051035547,"results":"28","hashOfConfig":"26"},{"size":6913,"mtime":1610862334604,"results":"29","hashOfConfig":"26"},{"size":5302,"mtime":1611080848826,"results":"30","hashOfConfig":"26"},{"size":2350,"mtime":1608910683121,"results":"31","hashOfConfig":"26"},{"size":1700,"mtime":1610800311243,"results":"32","hashOfConfig":"26"},{"size":628,"mtime":1608439606892,"results":"33","hashOfConfig":"26"},{"size":2230,"mtime":1607971620643,"results":"34","hashOfConfig":"26"},{"size":3891,"mtime":1610869435578,"results":"35","hashOfConfig":"26"},{"size":4288,"mtime":1611048334207,"results":"36","hashOfConfig":"26"},{"size":3312,"mtime":1611050161906,"results":"37","hashOfConfig":"26"},{"size":5167,"mtime":1610773582275,"results":"38","hashOfConfig":"26"},{"size":4447,"mtime":1611082381430,"results":"39","hashOfConfig":"26"},{"size":2857,"mtime":1610995946804,"results":"40","hashOfConfig":"26"},{"size":615,"mtime":1608439575519,"results":"41","hashOfConfig":"26"},{"size":4802,"mtime":1611052172368,"results":"42","hashOfConfig":"26"},{"size":901,"mtime":1610870081291,"results":"43","hashOfConfig":"26"},{"size":2482,"mtime":1611079438587,"results":"44","hashOfConfig":"26"},{"size":1696,"mtime":1610995686766,"results":"45","hashOfConfig":"26"},{"size":1241,"mtime":1608746465054,"results":"46","hashOfConfig":"26"},{"size":2927,"mtime":1610979323789,"results":"47","hashOfConfig":"26"},{"size":1803,"mtime":1611067824334,"results":"48","hashOfConfig":"26"},{"size":2868,"mtime":1611080783871,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"nhe71c",{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/slechani/chat_app/frontend/src/reportWebVitals.js",[],["115","116"],"/home/slechani/chat_app/frontend/src/Pages/Register.js",["117","118","119","120"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = {\n        username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,\n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.registerAccount(username, password)\n    }\n\n    registerAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"users/\", { username: username, password: password })\n            .then(res => {\n                localStorage.setItem(\"username\", username)\n                this.setState({redirect:true})\n            })\n            .catch(error => {\n                alert(\"Error : \" + error)\n            })\n    }\n\n    render() {\n        const { username, password, submittedUsername, submittedPassword } = this.state\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Register' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Chat.js",["121","122","123","124"],"/home/slechani/chat_app/frontend/src/Components/Chatbox.js",["125","126","127","128","129","130","131","132","133","134","135","136","137"],"\n\nimport React, { Component } from 'react'\nimport { Grid, Input, GridRow, Container, TextArea, Button, ButtonGroup, Icon } from 'semantic-ui-react'\nimport Axios from 'axios';\nimport configData from  \"../config.json\";\nimport 'react-quill/dist/quill.snow.css';\nimport ReactQuill, {Quill} from 'react-quill';\n\n\nconst CustomButton = () => <Icon name=\"send\"></Icon>\n// const CustomToolbar = () => (\n//     <div id=\"toolbar\">\n//       {/* \"bold\", \"italic\", \"strike\", \"underline\", \"blockquote\", { list: \"bullet\" }, {'list': 'ordered'}, \"link\", {insertStar: this.insertStar} */}\n//       <button className=\"ql-bold\"></button>\n//       <button className=\"ql-italic\"></button>\n//       <button className=\"ql-strike\"></button>    \n//       <button className=\"ql-underline\"></button>    \n//       <button className=\"ql-blockquote\"></button>        \n//       <button className=\"ql-send-message\" onClick={this.props.sendMessage}>\n//         <CustomButton />\n//       </button>\n//     </div>\n//   )\n\n  class CustomToolbar extends Component { \n\n    constructor(props){\n        super(props)\n    }\n      render() {\n          \n        return(\n    <div id=\"toolbar\">\n      {/* \"bold\", \"italic\", \"strike\", \"underline\", \"blockquote\", { list: \"bullet\" }, {'list': 'ordered'}, \"link\", {insertStar: this.insertStar} */}\n      <button className=\"ql-bold\"></button>\n      <button className=\"ql-italic\"></button>\n      <button className=\"ql-strike\"></button>    \n      <button className=\"ql-underline\"></button>    \n      <button className=\"ql-blockquote\"></button>        \n      <button className=\"ql-send-message\" onClick={() => {this.props.sendMessage(false)}}>\n        <CustomButton />\n      </button>\n    </div>\n  )\n      }\n  }\n\n  function insertStar()  {\n    alert(\"star\")\n}\n\nexport default class Chatbox extends Component {\n\n    constructor(props)\n    {\n        super(props);\n    }\n    state = {\n        messageContent : \"\",       \n        oldValue: \"\",\n        value: \"\",\n    }\n\n\n\n    onChangeMessage = (html) => {\n        this.setState({oldValue: this.state.messageContent, messageContent: html})\n    }\n\n    handleKey = (event) => {\n        if (event.key == \"Enter\" && !event.shiftKey)\n        {            \n            this.setState({messageContent: \"\"})\n            event.preventDefault();\n            this.sendMessage(true)\n            event.stopPropagation();\n            return false\n        }\n    }\n\n    cleanMessage = (message) => {\n        message = message.replace(/<p><\\/\\p>/g, \"\")\n        message = message.replace(/<p><br><\\/p>/g, \"\")\n        message = message.replace(/<br>/g, \"\")\n        return message\n    }\n\n    sendMessage = (from_enter_key) => {\n   \n        let message = \"\"\n        if (from_enter_key)\n            message = this.state.oldValue\n        else\n            message = this.state.messageContent\n        let message_to_send = {       \n            content:  this.cleanMessage(message),\n            sender_id: localStorage.getItem(\"user_id\"),\n            destination_id: window.location.pathname.split('/')[2], \n        }\n      Axios.post(configData.SERVER_URL + \"messages/\", message_to_send)\n           .then((res) => {\n               this.props.refreshMessages()\n               this.setState({messageContent:\"\"})\n               this.setState({oldValue:\"\"})\n           })\n           .catch((err) => {\n               console.log(err)\n           })\n    }\n\n\n    render() {\n        const {value, setValue} = this.state\n        const quillToolbar = {\n            history: {\n                delay: 1000,\n                maxStack: 100,\n                userOnly: false\n              },\n            toolbar: [\"bold\", \"italic\", \"strike\", \"underline\", \"blockquote\", { list: \"bullet\" }, {'list': 'ordered'}, \"link\", {insertStar: this.insertStar}\n        ],\n\n\n            clipboard: {\n                matchVisual: false\n            },\n   \n          };\n        //   alert(\"name in box : \" + this.props.channel)\n        return (\n            \n            <Grid.Row className=\"chatbox-container\">\n            \n            {/* <ReactQuill value={this.state.messageContent} onKeyDown={(e) => {this.handleKey(e)}}  ref={(el) => {this.reactQuillRef = el}} className=\"chatbox-wrapper\" modules={quillToolbar} theme=\"snow\" onChange={this.onChangeMessage} > */}\n            <ReactQuill key={this.props.channelName} placeholder={\"Write a message to #\" + this.props.channelName} value={this.state.messageContent} onKeyDown={(e) => {this.handleKey(e)}}  ref={(el) => {this.reactQuillRef = el}} className=\"chatbox-wrapper\" modules={Chatbox.modules} theme=\"snow\" onChange={this.onChangeMessage} >\n              {/* <div className=\"chatbox-input\"/> */}\n              </ReactQuill> \n              <CustomToolbar sendMessage={this.sendMessage}></CustomToolbar>\n  \n                {/* <Grid className=\"chatbox\">\n                    <Grid.Row className=\"chatbox-textarea-row\">\n                    <form className=\"unstyled\" id=\"textarea-chat\">\n                        <TextArea  name=\"messageContent\" onChange={this.handleChange} placeholder=\"Send a message to #channel\" className=\"chatbox-input\"></TextArea>\n                    </form>\n                    </Grid.Row>\n                    <GridRow className=\"chatbox-formatting-row\">\n                        <Button.Group>\n                            <Button icon>\n                                <Icon name='bold' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='italic' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='strikethrough' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='code' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='ordered list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='bulleted list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='quote left' />\n                            </Button>\n                        </Button.Group>\n                    \n                            <Button onClick={this.sendMessage} icon>\n                                <Icon name='send' />\n                            </Button>\n                       \n\n\n                    </GridRow>\n                </Grid> */}\n\n            </Grid.Row>\n\n\n\n        )\n    }\n}\n\nChatbox.modules = {\n    toolbar: {\n      container: \"#toolbar\",\n      handlers: {\n        \"insertStar\": insertStar,\n      }\n    }\n  }\n  \n  /*\n   * Quill editor formats\n   * See http://quilljs.com/docs/formats/\n   */\n  Chatbox.formats = [\n    \"bold\", \"italic\", \"strike\", \"underline\", \"blockquote\", { list: \"bullet\" }, {'list': 'ordered'}, \"link\"\n  ]\n",["138","139"],"/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js",["140","141","142","143","144","145"],"/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js",["146","147","148","149"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Form, Checkbox, Grid } from 'semantic-ui-react';\nimport configData from  \"../config.json\";\nimport Axios from 'axios';\n\nexport default class ChangeTopic extends Component {\n  \n    state = {\n        open: false,\n        channel_topic: \"\",\n    }\n\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    setTopic = () => {\n        const req_body = {\n            topic: this.state.channel_topic,            \n        }\n\n       Axios.patch(configData.SERVER_URL + \"channels/\" + this.props.channelId + \"/\", req_body)\n            .then((res) => {\n                this.props.refreshChannels();\n                this.setState({open: false})\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n    render() {\n        const { channel_topic} = this.state \n        return (\n            <Modal className=\"\"\n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"mini\"\n                trigger={<Button id=\"chat-channel-topic\" className=\"unstyled\">{this.props.topic}</Button>}\n            >\n                <Modal.Header className=\"create-chan-header\">Edit channel topic</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <Form class=\"\">\n                        <Form.Field required>\n                        \n                        <Form.Input\n                                placeholder='Channel topic'\n                                name='channel_topic'\n                                label=\"Channel topic\"\n                                onChange={this.handleChange}                             \n                            />\n                        </Form.Field>\n                       \n\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Cancel\n              </Button>\n                <Button positive onClick={this.setTopic}>\n                    Set Topic\n                </Button>\n                </Modal.Actions>\n            </Modal>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Message.js",["150","151","152"],"import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react';\n\nexport default class Message extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n\n    }\n\n\n    render() {\n        let local_date = new Date(this.props.date) \n        let time = local_date.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'})\n\n        return (\n\n            <div className=\"message-row\">\n\n                <div className=\"message-left-col\">\n                    {this.props.showUsername === false &&\n                        <span className=\"chat-message-side-time\">{time}</span>\n                    }\n                    {this.props.showUsername === true &&\n                        <img id=\"profile-img-chat-message\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48\"></img>\n\n                    }\n                </div>\n                <div className=\"message-right-col\">\n\n                    {this.props.showUsername === true &&\n                        <div className=\"chat-message-header\">\n                            <span className=\"chat-message-username\">\n                                {this.props.username}\n                            </span>\n                            <span className=\"chat-message-time\">\n                                {time} \n                        </span>\n                        </div>\n                    }\n                    <p className=\"chat-message\">\n                        {/* {this.props.message} */}\n                        <span dangerouslySetInnerHTML={{ __html: this.props.message }}></span>\n                    </p>\n                </div>\n            </div>\n\n        )\n    }\n}\n",["153","154"],"/home/slechani/chat_app/frontend/src/index.js",["155","156"],"import '../node_modules/semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/slechani/chat_app/frontend/src/Pages/Login.js",["157","158","159","160"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = { username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,}\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.loginAccount(username, password)        \n    }\n\n    loginAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"token/\", {username:username, password:password})\n        .then(res => {\n            localStorage.setItem(\"username\", username)\n            this.setState({redirect:true})\n        })\n        .catch(error => {\n            alert(\"Error : \" + error)\n        })\n    }\n\n    render() {\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        const { username, password, submittedUsername, submittedPassword } = this.state \n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Login' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js",["161","162","163","164","165"],"import React, { Component } from 'react'\nimport Message from './Message';\nimport { Grid, Divider } from 'semantic-ui-react';\nimport jquery from 'jquery';\nimport DateSeparator from './DateSeparator';\nimport dateFormat from 'dateformat';\n\nexport default class MessageDisplay extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        deltaY: 0,\n        maxDelta: 0,\n    }\n\n    componentDidMount() {\n        // IE, Chrome, Safari, Opera\n        window.addEventListener(\"wheel\", this.scrollHandler);\n\n        // Firefox\n        window.addEventListener(\"DOMMouseScroll\", this.scrollHandler);\n\n        const maxDelta = jquery(\".container-content\").height() - window.innerHeight;\n\n        this.setState({\n            maxDelta\n        });\n\n        jquery(\".container-content.left\").css(\n            \"transform\",\n            `translateY(-${jquery(\".container-content\").height()}px)`\n        );\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate () {\n        this.scrollToBottom();\n    }\n\n    // Scroll to bottom of chat\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n      \n\n    scrollHandler = event => {\n        this.setState(state => {\n            let newDeltaY = state.deltaY + event.deltaY;\n\n            newDeltaY = Math.max(0, newDeltaY);\n            newDeltaY = Math.min(this.state.maxDelta, newDeltaY);\n\n            return {\n                deltaY: newDeltaY\n            };\n        });\n    };\n\n    getDateToDisplay = (date) => {\n        if (date){\n        let yesterday = new Date();\n        yesterday.setDate(new Date().getDate() - 1)\n        if (new Date().toDateString() === date.toDateString())\n            return (\"Today\")\n        else if (date.toLocaleDateString() == yesterday.toLocaleDateString())\n            return (\"Yesterday\")    \n        else     \n            return dateFormat(date, \"mmmm dS yyyy\")\n        }\n        return (\"error\")\n    }\n\n\n    render() {\n        /* Checking if current message username is the same as the previous one, changing display\n           of message depending on it like on the official Slack. */\n        var old_username = \"jdajzdjzajdjadjajd\"\n        var old_date = \"djzakdjad\"\n        let messages = this.props.messages.map((data, idx) => {\n            var showUsername = false\n            var showDate = false\n            var local_date_str = this.getDateToDisplay(new Date(data.sent_date))\n            // var current_date = this.getDateToDisplay(new Date(data.sender_date))\n            // alert(\"current  : \" + current_date + \" / OLD => \" + old_date)\n            if (local_date_str != old_date)\n                showDate = true\n            old_date = local_date_str    \n            var current_username = this.props.messages[idx].sender_name\n            if (current_username != old_username)\n                showUsername = true\n            old_username = current_username  \n           \n                        // let date = local_date.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'})\n    \n            return (\n                <div className=\"\">\n                    <Message showUsername={showUsername} date={data.sent_date} username={data.sender_name} message={data.content}></Message>\n                    { showDate === true ?  <DateSeparator date={local_date_str}></DateSeparator>\n                    : null}\n                   \n                </div>\n            )\n        })\n        return (\n            <Grid.Row className=\"message-display-container\">\n                <div className=\"\">\n                    {messages}\n\n                    {/* Blank div to make scroll to bottom easy */}\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n\n            </Grid.Row>\n        )\n    }\n}\n",["166","167"],"/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js",["168","169"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js",["170","171","172","173"],"/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js",["174","175","176","177","178","179","180","181"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List, Icon, } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaPlus } from 'react-icons/fa';\nimport { Redirect } from \"react-router-dom\";\nimport AddChannelModal from './AddChannelModal.js';\n// import { ModalExampleModal } from \"../Components/AddChannelModal\";\n\n\n\nexport default class ChannelsMenu extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        activeIndex: 0,\n        hover: false,\n        channels: [],\n        profile_id: null,\n        redirect: false,\n        channel_to_load: null,\n        display_channels: false,\n    };\n\n    loadChannel = (channel_id) => {\n        const url = \"/workspace/\" + channel_id\n        this.setState({ redirect: true })\n        this.setState({ channel_to_load: url })\n    }\n\n    getActiveChannel = () => {\n        let url = window.location.pathname\n        url = url.split('/')[2]\n        return (parseInt(url))\n    }\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({ hover: mouse_status })\n\n    }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        let display_channels = false\n        const { activeIndex } = this.state\n        const channels = this.props.channels.map((data, idx) => {\n            var active_channel = false\n            if (data.id === this.getActiveChannel()) {\n                active_channel = true\n            }\n            // Display channel if rendering fav list OR Display if rendering regular channels and channel isn't in fav list  \n            if (this.props.starChannels === true || (this.props.starChannels === false && this.props.starredChannels.find(function (el) { return el.id === data.id }) == undefined)) {\n                return (\n  \n                    <List.Item onClick={() => { this.loadChannel(data.id) }} className={`workspace-submenu-row-item ${active_channel ? \"active-item\" : \"\"}`} >\n                        <List.Icon > <FaHashtag></FaHashtag></List.Icon>\n                        <List.Content className=\"channel-title-menu\">\n                            {data.name}\n                        </List.Content>\n                    </List.Item>\n                )\n            }\n            else\n                return\n        })\n\n\n\n        if (this.state.redirect === true) {\n            this.setState({ redirect: false })\n            this.setState({ channel_to_load: null })\n            this.props.changeState(\"refreshChat\", true)\n            return <Redirect to={this.state.channel_to_load} />\n        }\n        if (this.props.channels.length > 0 || this.props.starChannels === false)\n            display_channels = true\n\n        return (\n\n\n            <GridRow className=\"side-menu-item\" columns=\"16\"  >\n                {display_channels ?\n                    <GridColumn className=\"no-padding\" width=\"16\">\n                        <Accordion>\n                            <Accordion.Title onMouseEnter={() => { this.handleHover(true) }} onMouseLeave={() => { this.handleHover(false) }} className=\"workspace-submenu-row\"\n                                active={activeIndex === 0}\n                                index={0}\n                                onClick={this.handleClick}\n                            >\n                                <Icon color=\"white\" name=\"dropdown\"></Icon>\n                                <span className=\"white bold\">{this.props.title}</span>\n                                {/* Add Channel hover icon */}\n                                {this.state.hover === true && this.props.starChannels != true &&\n                                    <span className=\"menu-side-icon-container\">\n                                        <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                                    </span>\n                                }\n                            </Accordion.Title>\n                            <Accordion.Content active={activeIndex === 0}>\n                                <List className=\"collapsible-menu-list\">\n\n                                    {channels}\n                                    {this.props.starChannels != true &&\n                                        <List.Item className=\"workspace-submenu-row-item\">\n                                            <List.Icon >       <FaPlusSquare ></FaPlusSquare></List.Icon>\n\n                                            {/* Add channels */}\n\n                                            <AddChannelModal refreshChannels={this.props.refreshChannels}></AddChannelModal>\n\n\n                                        </List.Item>\n                                    }\n                                </List>\n                            </Accordion.Content>\n                        </Accordion>\n                    </GridColumn> :\n                    <span></span>\n                }\n            </GridRow>\n\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js",["182","183"],"/home/slechani/chat_app/frontend/src/Components/UserListModal.js",["184","185"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Image, Search } from 'semantic-ui-react';\nimport AddUsersModal from './AddUsersModal';\n\n\nexport default class UserListModal extends Component {\n    state = {\n        open: false,\n    }\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    reload = () => {\n        this.props.reload()\n        this.setOpen(false)\n\n    }\n\n    render() {\n        let users = this.props && this.props.usersList.length > 0 ? \n        this.props.usersList.map((user, index) => {                   \n                return (\n                    <List.Item>\n                        <Image className=\"user-list-picture\"  src='https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48' />\n                        <List.Content>\n                           <List.Header> <p className=\"user-list-name-container\">\n                            <span className=\"user-list-name\">{user.username}</span>\n                            </p>\n                            </List.Header>\n                        </List.Content>\n                    </List.Item>\n                ) \n            }) : <span></span>\n        \n        return (\n            <Modal \n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"tiny\"\n                trigger={<button className=\"unstyled user-count-channel-btn\">\n                    <div class=\"double-button-half-left\">\n                        <img id=\"profile-img-chat\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-24\"></img>\n                    </div>\n                    <div className=\"double-button-half-right user-count-channel\">\n                        <div className=\"double-button-count\">\n                            {this.props.userList.length}\n                        </div>\n                    </div></button>}\n            >\n                <Modal.Header className=\"create-chan-header\">{this.props.userList.length} members in #{this.props.channelName}</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <button className=\"unstyled add-people-modal-btn\">\n              \n                    <AddUsersModal addPeople={true} channelId={this.props.channelId} reload={this.reload}  channelName={this.props.channelName}></AddUsersModal>\n                       \n                    </button>\n                    <List selection verticalAlign='middle' className=\"user-list\">\n                        {users}\n                    </List>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Back\n          </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/App.js",["186","187"],"import logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './Pages/Login'; \nimport Register from './Pages/Register';\nimport Workspace from './Pages/Workspace';\nfunction App() {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/workspace\" component={Workspace} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;\n",["188","189"],"/home/slechani/chat_app/frontend/src/Components/ChatHeader.js",["190","191","192"],"/home/slechani/chat_app/frontend/src/Components/DateSeparator.js",["193","194","195"],"/home/slechani/chat_app/frontend/src/Pages/Workspace.js",[],"/home/slechani/chat_app/frontend/src/Components/AddUsersModal.js",["196","197","198"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js",["199","200","201","202"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Icon, Button } from 'semantic-ui-react';\nimport { FaChevronDown, FaPenSquare } from 'react-icons/fa';\nimport { BsPencilSquare } from 'react-icons/bs'\n\n\nexport default class WorkspaceName extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Grid verticalAlign='middle' className=\"workspace-name-grid\" >\n                <GridRow  className=\"nopadding-nomargin\" columns=\"16\">\n                    <GridColumn className=\"nopadding-nomargin\" width=\"12\" >\n                        <div className=\"bold workspace-name \">{this.props.title} <FaChevronDown size=\"0.75em\"></FaChevronDown></div>\n                    </GridColumn>\n                    <GridColumn width=\"4\" >\n\n\n                        {/* <Button circular className=\"new-message-btn\"> */}\n                        <Icon id=\"write-messsage-icon\" circular color=\"black\"  size=\"em\" name=\"pencil square\"></Icon>\n                            {/* <BsPencilSquare color=\"#3F0E40\" size=\"1.10em\"></BsPencilSquare> */}\n                        {/* </Button> */}\n\n                    </GridColumn>\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/AddUserSearchbar.js",["203","204","205"],"import _ from 'lodash'\nimport React from 'react'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\nimport Axios from 'axios';\nimport configData from \"../config.json\";\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n}\n\nvar source = []\n\nfunction getNonSubscribedUsers(channel_id){\n    Axios.post(configData.SERVER_URL + \"getNonChannelMembers/\", {channel_id: channel_id})\n         .then((res) => {\n            source = res.data\n         })\n         .catch((err) => {\n             console.log(err)\n         })\n}\n\nfunction addUserToChannel(user_id, channel_id, reload){\n    Axios.post(configData.SERVER_URL + \"addUserToChannel/\", {channel_id: channel_id, profile_id: user_id})\n    .then((res) => {\n      reload();\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nfunction AddUserSearchbar(props) {\n    getNonSubscribedUsers(props.channelId)\n    const renderer = ({username, user_id }) => (\n        <div className=\"searchbar-add-users-results\">               \n            <p className=\"searchbar-add-users-results\" onClick={() =>{addUserToChannel(user_id, props.channelId, props.reload)} }>{username}</p>               \n        </div>\n    );\n\n\n    // var source = getNonSubscribedUsers(props.channelId)\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n  const { loading, results, value } = state\n\n  const timeoutRef = React.useRef()\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i')\n      const isMatch = (result) => re.test(result.username)\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n//   alert(JSON.stringify(results))\n  return (\n\n        <Search\n          loading={loading}\n          onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.username })\n          }\n          onSearchChange={handleSearchChange}\n          results={results}\n          resultRenderer={renderer}\n          value={value}\n          className=\"searchbar-add-users\"\n        />\n  )\n}\n\nexport default AddUserSearchbar\n","/home/slechani/chat_app/frontend/src/Components/SendMessageModal.js",["206"],"/home/slechani/chat_app/frontend/src/Components/DirectMessageSearchbar.js",["207","208","209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"218","line":2,"column":33,"nodeType":"216","messageId":"217","endLine":2,"endColumn":43},{"ruleId":"214","severity":1,"message":"219","line":34,"column":37,"nodeType":"216","messageId":"217","endLine":34,"endColumn":54},{"ruleId":"214","severity":1,"message":"220","line":34,"column":56,"nodeType":"216","messageId":"217","endLine":34,"endColumn":73},{"ruleId":"214","severity":1,"message":"221","line":2,"column":16,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"222","line":2,"column":37,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},{"ruleId":"214","severity":1,"message":"223","line":2,"column":46,"nodeType":"216","messageId":"217","endLine":2,"endColumn":51},{"ruleId":"214","severity":1,"message":"224","line":57,"column":13,"nodeType":"216","messageId":"217","endLine":57,"endColumn":21},{"ruleId":"214","severity":1,"message":"223","line":4,"column":16,"nodeType":"216","messageId":"217","endLine":4,"endColumn":21},{"ruleId":"214","severity":1,"message":"221","line":4,"column":23,"nodeType":"216","messageId":"217","endLine":4,"endColumn":30},{"ruleId":"214","severity":1,"message":"225","line":4,"column":32,"nodeType":"216","messageId":"217","endLine":4,"endColumn":41},{"ruleId":"214","severity":1,"message":"226","line":4,"column":43,"nodeType":"216","messageId":"217","endLine":4,"endColumn":51},{"ruleId":"214","severity":1,"message":"215","line":4,"column":53,"nodeType":"216","messageId":"217","endLine":4,"endColumn":59},{"ruleId":"214","severity":1,"message":"227","line":4,"column":61,"nodeType":"216","messageId":"217","endLine":4,"endColumn":72},{"ruleId":"214","severity":1,"message":"228","line":8,"column":21,"nodeType":"216","messageId":"217","endLine":8,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":28,"column":5,"nodeType":"231","messageId":"232","endLine":30,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":55,"column":5,"nodeType":"231","messageId":"232","endLine":58,"endColumn":6},{"ruleId":"233","severity":1,"message":"234","line":72,"column":23,"nodeType":"235","messageId":"236","endLine":72,"endColumn":25},{"ruleId":"214","severity":1,"message":"237","line":114,"column":16,"nodeType":"216","messageId":"217","endLine":114,"endColumn":21},{"ruleId":"214","severity":1,"message":"238","line":114,"column":23,"nodeType":"216","messageId":"217","endLine":114,"endColumn":31},{"ruleId":"214","severity":1,"message":"239","line":115,"column":15,"nodeType":"216","messageId":"217","endLine":115,"endColumn":27},{"ruleId":"210","replacedBy":"240"},{"ruleId":"212","replacedBy":"241"},{"ruleId":"214","severity":1,"message":"242","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"243","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"214","severity":1,"message":"244","line":3,"column":36,"nodeType":"216","messageId":"217","endLine":3,"endColumn":48},{"ruleId":"214","severity":1,"message":"245","line":3,"column":50,"nodeType":"216","messageId":"217","endLine":3,"endColumn":56},{"ruleId":"214","severity":1,"message":"246","line":3,"column":58,"nodeType":"216","messageId":"217","endLine":3,"endColumn":67},{"ruleId":"233","severity":1,"message":"247","line":32,"column":26,"nodeType":"235","messageId":"236","endLine":32,"endColumn":28},{"ruleId":"214","severity":1,"message":"248","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"249","line":2,"column":37,"nodeType":"216","messageId":"217","endLine":2,"endColumn":45},{"ruleId":"214","severity":1,"message":"242","line":2,"column":47,"nodeType":"216","messageId":"217","endLine":2,"endColumn":51},{"ruleId":"214","severity":1,"message":"250","line":37,"column":17,"nodeType":"216","messageId":"217","endLine":37,"endColumn":30},{"ruleId":"214","severity":1,"message":"242","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"230","line":5,"column":5,"nodeType":"231","messageId":"232","endLine":7,"endColumn":6},{"ruleId":"251","severity":1,"message":"252","line":27,"column":25,"nodeType":"253","endLine":27,"endColumn":132},{"ruleId":"210","replacedBy":"254"},{"ruleId":"212","replacedBy":"255"},{"ruleId":"214","severity":1,"message":"256","line":8,"column":25,"nodeType":"216","messageId":"217","endLine":8,"endColumn":30},{"ruleId":"214","severity":1,"message":"257","line":8,"column":32,"nodeType":"216","messageId":"217","endLine":8,"endColumn":38},{"ruleId":"214","severity":1,"message":"215","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"218","line":2,"column":33,"nodeType":"216","messageId":"217","endLine":2,"endColumn":43},{"ruleId":"214","severity":1,"message":"219","line":35,"column":37,"nodeType":"216","messageId":"217","endLine":35,"endColumn":54},{"ruleId":"214","severity":1,"message":"220","line":35,"column":56,"nodeType":"216","messageId":"217","endLine":35,"endColumn":73},{"ruleId":"214","severity":1,"message":"222","line":3,"column":16,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":9,"column":5,"nodeType":"231","messageId":"232","endLine":12,"endColumn":6},{"ruleId":"233","severity":1,"message":"234","line":68,"column":44,"nodeType":"235","messageId":"236","endLine":68,"endColumn":46},{"ruleId":"233","severity":1,"message":"247","line":88,"column":32,"nodeType":"235","messageId":"236","endLine":88,"endColumn":34},{"ruleId":"233","severity":1,"message":"247","line":92,"column":34,"nodeType":"235","messageId":"236","endLine":92,"endColumn":36},{"ruleId":"210","replacedBy":"258"},{"ruleId":"212","replacedBy":"259"},{"ruleId":"214","severity":1,"message":"260","line":42,"column":17,"nodeType":"216","messageId":"217","endLine":42,"endColumn":29},{"ruleId":"214","severity":1,"message":"261","line":42,"column":31,"nodeType":"216","messageId":"217","endLine":42,"endColumn":43},{"ruleId":"214","severity":1,"message":"222","line":2,"column":37,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},{"ruleId":"214","severity":1,"message":"262","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":16},{"ruleId":"214","severity":1,"message":"244","line":7,"column":18,"nodeType":"216","messageId":"217","endLine":7,"endColumn":30},{"ruleId":"214","severity":1,"message":"263","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":12},{"ruleId":"214","severity":1,"message":"242","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"243","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":12,"column":5,"nodeType":"231","messageId":"232","endLine":14,"endColumn":6},{"ruleId":"233","severity":1,"message":"247","line":39,"column":26,"nodeType":"235","messageId":"236","endLine":39,"endColumn":28},{"ruleId":"233","severity":1,"message":"234","line":61,"column":167,"nodeType":"235","messageId":"236","endLine":61,"endColumn":169},{"ruleId":"264","severity":1,"message":"265","line":73,"column":17,"nodeType":"266","messageId":"267","endLine":73,"endColumn":23},{"ruleId":"233","severity":1,"message":"247","line":102,"column":87,"nodeType":"235","messageId":"236","endLine":102,"endColumn":89},{"ruleId":"233","severity":1,"message":"247","line":112,"column":62,"nodeType":"235","messageId":"236","endLine":112,"endColumn":64},{"ruleId":"214","severity":1,"message":"268","line":2,"column":23,"nodeType":"216","messageId":"217","endLine":2,"endColumn":30},{"ruleId":"233","severity":1,"message":"234","line":116,"column":44,"nodeType":"235","messageId":"236","endLine":116,"endColumn":46},{"ruleId":"214","severity":1,"message":"269","line":2,"column":38,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},{"ruleId":"251","severity":1,"message":"252","line":45,"column":25,"nodeType":"253","endLine":45,"endColumn":124},{"ruleId":"214","severity":1,"message":"270","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":12},{"ruleId":"214","severity":1,"message":"271","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":23},{"ruleId":"210","replacedBy":"272"},{"ruleId":"212","replacedBy":"273"},{"ruleId":"214","severity":1,"message":"274","line":2,"column":25,"nodeType":"216","messageId":"217","endLine":2,"endColumn":30},{"ruleId":"214","severity":1,"message":"275","line":2,"column":46,"nodeType":"216","messageId":"217","endLine":2,"endColumn":51},{"ruleId":"214","severity":1,"message":"276","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"214","severity":1,"message":"222","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"233","severity":1,"message":"247","line":12,"column":47,"nodeType":"235","messageId":"236","endLine":12,"endColumn":49},{"ruleId":"233","severity":1,"message":"247","line":12,"column":81,"nodeType":"235","messageId":"236","endLine":12,"endColumn":83},{"ruleId":"214","severity":1,"message":"248","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"274","line":2,"column":31,"nodeType":"216","messageId":"217","endLine":2,"endColumn":36},{"ruleId":"214","severity":1,"message":"269","line":2,"column":38,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":2,"column":43,"nodeType":"216","messageId":"217","endLine":2,"endColumn":49},{"ruleId":"214","severity":1,"message":"277","line":3,"column":25,"nodeType":"216","messageId":"217","endLine":3,"endColumn":36},{"ruleId":"214","severity":1,"message":"278","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"229","severity":1,"message":"230","line":8,"column":5,"nodeType":"231","messageId":"232","endLine":10,"endColumn":6},{"ruleId":"214","severity":1,"message":"242","line":3,"column":18,"nodeType":"216","messageId":"217","endLine":3,"endColumn":22},{"ruleId":"214","severity":1,"message":"279","line":3,"column":24,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"268","line":3,"column":32,"nodeType":"216","messageId":"217","endLine":3,"endColumn":39},{"ruleId":"214","severity":1,"message":"280","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"214","severity":1,"message":"242","line":3,"column":18,"nodeType":"216","messageId":"217","endLine":3,"endColumn":22},{"ruleId":"214","severity":1,"message":"279","line":3,"column":24,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"268","line":3,"column":32,"nodeType":"216","messageId":"217","endLine":3,"endColumn":39},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'GridColumn' is defined but never used.","'submittedUsername' is assigned a value but never used.","'submittedPassword' is assigned a value but never used.","'GridRow' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'messages' is assigned a value but never used.","'Container' is defined but never used.","'TextArea' is defined but never used.","'ButtonGroup' is defined but never used.","'Quill' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'quillToolbar' is assigned a value but never used.",["281"],["282"],"'Grid' is defined but never used.","'FaChevronDown' is defined but never used.","'FaPlusSquare' is defined but never used.","'FaUser' is defined but never used.","'FaUserAlt' is defined but never used.","Expected '!==' and instead saw '!='.","'List' is defined but never used.","'Checkbox' is defined but never used.","'channel_topic' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["281"],["282"],"'Route' is defined but never used.","'Switch' is defined but never used.",["281"],["282"],"'channel_name' is assigned a value but never used.","'channel_desc' is assigned a value but never used.","'FaPlus' is defined but never used.","'Chat' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Segment' is defined but never used.","'Search' is defined but never used.","'logo' is defined but never used.","'BrowserRouter' is defined but never used.",["281"],["282"],"'Image' is defined but never used.","'Popup' is defined but never used.","'BsStar' is defined but never used.","'FaPenSquare' is defined but never used.","'BsPencilSquare' is defined but never used.","'Header' is defined but never used.","'AddUserSearchbar' is defined but never used.","no-global-assign","no-unsafe-negation"]