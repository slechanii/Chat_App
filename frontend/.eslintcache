[{"/home/slechani/chat_app/frontend/src/Pages/Workspace.js":"1","/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js":"2","/home/slechani/chat_app/frontend/src/Components/Chat.js":"3","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js":"4","/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js":"5","/home/slechani/chat_app/frontend/src/index.js":"6","/home/slechani/chat_app/frontend/src/Pages/Login.js":"7","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js":"8","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js":"9","/home/slechani/chat_app/frontend/src/Components/Message.js":"10","/home/slechani/chat_app/frontend/src/reportWebVitals.js":"11","/home/slechani/chat_app/frontend/src/Pages/Register.js":"12","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js":"13","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js":"14","/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js":"15","/home/slechani/chat_app/frontend/src/Components/UserListModal.js":"16","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js":"17","/home/slechani/chat_app/frontend/src/Components/Chatbox.js":"18"},{"size":2320,"mtime":1609003175513,"results":"19","hashOfConfig":"20"},{"size":4435,"mtime":1609005687309,"results":"21","hashOfConfig":"20"},{"size":3728,"mtime":1610763492028,"results":"22","hashOfConfig":"20"},{"size":3833,"mtime":1610764542661,"results":"23","hashOfConfig":"20"},{"size":3782,"mtime":1610764892491,"results":"24","hashOfConfig":"20"},{"size":628,"mtime":1608439606892,"results":"25","hashOfConfig":"20"},{"size":2230,"mtime":1607971620643,"results":"26","hashOfConfig":"20"},{"size":3010,"mtime":1609005442826,"results":"27","hashOfConfig":"20"},{"size":3875,"mtime":1608924077195,"results":"28","hashOfConfig":"20"},{"size":1597,"mtime":1608661523969,"results":"29","hashOfConfig":"20"},{"size":362,"mtime":1607523001563,"results":"30","hashOfConfig":"20"},{"size":2275,"mtime":1607971464348,"results":"31","hashOfConfig":"20"},{"size":1241,"mtime":1608746465054,"results":"32","hashOfConfig":"20"},{"size":4324,"mtime":1610763883297,"results":"33","hashOfConfig":"20"},{"size":2350,"mtime":1608910683121,"results":"34","hashOfConfig":"20"},{"size":2596,"mtime":1608922314486,"results":"35","hashOfConfig":"20"},{"size":2623,"mtime":1608659956762,"results":"36","hashOfConfig":"20"},{"size":2907,"mtime":1608585385797,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"nhe71c",{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/slechani/chat_app/frontend/src/Pages/Workspace.js",[],["88","89"],"/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js",["90","91","92","93","94","95"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List, Icon, } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaPlus } from 'react-icons/fa';\nimport { Redirect } from \"react-router-dom\";\nimport AddChannelModal from './AddChannelModal.js';\n// import { ModalExampleModal } from \"../Components/AddChannelModal\";\n\n\n\nexport default class ChannelsMenu extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        activeIndex: 0,\n        hover: false,\n        channels: [],\n        profile_id: null,\n        redirect: false,\n        channel_to_load: null,\n        display_channels: false,\n    };\n\n    loadChannel = (channel_id) => {\n        const url = \"/workspace/\" + channel_id\n        this.setState({ redirect: true })\n        this.setState({ channel_to_load: url })\n    }\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({ hover: mouse_status })\n\n    }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        let display_channels = false\n        const { activeIndex } = this.state\n        const channels = this.props.channels.map((data, idx) => {\n            return (\n                <List.Item onClick={() => { this.loadChannel(data.id) }} className=\"workspace-submenu-row\">\n                    <List.Icon > <FaHashtag></FaHashtag></List.Icon>\n                    <List.Content className=\"channel-title-menu\">\n                        {data.name}\n                    </List.Content>\n                </List.Item>\n            )\n        })\n\n\n\n        if (this.state.redirect === true) {\n            this.setState({ redirect: false })\n            this.setState({ channel_to_load: null })\n            this.props.changeState(\"refreshChat\", true)\n            return <Redirect to={this.state.channel_to_load} />\n        }\n        if (this.props.channels.length > 0 || this.props.starChannels === false)\n            display_channels = true\n\n        return (\n        \n       \n            <GridRow className=\"side-menu-item\" columns=\"16\"  >\n                { display_channels ?\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title onMouseEnter={() => { this.handleHover(true) }} onMouseLeave={() => { this.handleHover(false) }} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                        >\n                      <Icon color=\"white\" name=\"dropdown\"></Icon>\n                            <span className=\"white bold\">{this.props.title}</span>\n                            {/* Add Channel hover icon */}\n                            {this.state.hover === true && this.props.starChannels != true &&\n                                <span className=\"menu-side-icon-container\">\n                                    <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                                </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n\n                                {channels}\n                                {this.props.starChannels != true &&\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon >       <FaPlusSquare ></FaPlusSquare></List.Icon>\n                                    \n                                        {/* Add channels */}\n                                        \n                                    <AddChannelModal refreshChannels={this.props.refreshChannels}></AddChannelModal>\n                                      \n\n                                </List.Item>\n                                  }\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn> :\n                         <span></span>\n                        }\n            </GridRow> \n   \n                        \n        )\n    }\n}\n",["96","97"],"/home/slechani/chat_app/frontend/src/Components/Chat.js",["98","99","100","101"],"/home/slechani/chat_app/frontend/src/Components/ChatHeader.js",["102","103","104","105","106"],"/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js",["107"],"/home/slechani/chat_app/frontend/src/index.js",["108","109"],"import '../node_modules/semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["110","111"],"/home/slechani/chat_app/frontend/src/Pages/Login.js",["112","113","114","115"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = { username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,}\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.loginAccount(username, password)        \n    }\n\n    loginAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"token/\", {username:username, password:password})\n        .then(res => {\n            localStorage.setItem(\"username\", username)\n            this.setState({redirect:true})\n        })\n        .catch(error => {\n            alert(\"Error : \" + error)\n        })\n    }\n\n    render() {\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        const { username, password, submittedUsername, submittedPassword } = this.state \n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Login' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js",["116","117","118","119"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Divider } from 'semantic-ui-react';\nimport WorkspaceName from './WorkspaceName';\nimport { VscFiles } from 'react-icons/vsc';\nimport { BsBookmark } from 'react-icons/bs';\nimport ChannelsMenu from './ChannelsMenu';\nimport { FaPlus, FaPlusSquare } from 'react-icons/fa';\nimport MessagesMenu from './MessagesMenu';\nimport Chat from './Chat';\n\nexport default class WorkspaceMenu extends Component {\n\n    state = {\n        refreshChat: false,\n    }\n\n    changeState = (name, value) => {\n        this.setState({[name]:value})\n    }\n\n    render() {\n        if (this.state.refreshChat === true){\n            this.setState({refreshChat: false})\n            this.props.changeState(\"refreshChat\", true)\n        }\n        \n        return (\n            <GridColumn className=\"workspace-menu\" width={2}>\n                <Grid className=\"text-not-selectable\">\n                    <GridRow className=\"workspace-main-row\">\n                        <GridColumn className=\"nopadding-nomargin\"  >\n                            <WorkspaceName title=\"Your Workspace\"></WorkspaceName>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Drafts */}\n                    <GridRow  id=\"drafts-row\" columns=\"16\" className=\"workspace-submenu-row side-menu-item\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <VscFiles></VscFiles>\n                        </GridColumn>\n                        <GridColumn className=\"nopadding-nomargin\" width=\"14\">\n                            <span className=\"bold workspace-menu-text\">Drafts</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Saved Items */}\n                    <GridRow columns=\"16\" className=\"workspace-submenu-row side-menu-item\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <BsBookmark></BsBookmark>\n                        </GridColumn>\n                        <GridColumn className=\"nopadding-nomargin\" width=\"14\">\n                            <span className=\"bold workspace-menu-text\">Saved items</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Starred Channels list */}\n                    <ChannelsMenu title=\"Starred channels\" starChannels={true} channels={this.props.starredChannels} refreshChannels={this.props.refreshChannels}  changeState={this.changeState} ></ChannelsMenu>\n                    \n                    {/* Standard Channels list */}\n                    <ChannelsMenu title=\"Channels\" starChannels={false} channels={this.props.channels} refreshChannels={this.props.refreshChannels}  changeState={this.changeState} ></ChannelsMenu>\n                    <MessagesMenu></MessagesMenu>\n                   \n                </Grid>\n                <GridColumn width={14}> \n            </GridColumn>\n            </GridColumn>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js",["120","121","122","123","124"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List, Icon } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaUser, FaUserAlt, FaPlus } from 'react-icons/fa';\nexport default class MessagesMenu extends Component {\n    state = {\n        activeIndex: 0,\n        hover: false,\n    };\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({hover: mouse_status})\n    }\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <GridRow className=\"side-menu-item\" columns=\"16\"  >\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title  onMouseEnter={() => {this.handleHover(true)}} onMouseLeave={() => {this.handleHover(false)}} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                           \n                        >\n                                <Icon className=\"white\" color=\"white\" name=\"dropdown\"></Icon>\n                            <span className=\"bold white\">Direct messages</span>\n\n                            {/* Start chat hover icon */}\n                            { this.state.hover === true &&\n                            <span className=\"menu-side-icon-container\">\n                                <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                            </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>admin</span>\n                                        <span>you</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>John</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>Jane</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaPlusSquare></FaPlusSquare></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        Send direct message\n                                    </List.Content>\n                                </List.Item>\n\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn>\n            </GridRow>\n        )\n    }\n}\n",["125","126"],"/home/slechani/chat_app/frontend/src/Components/Message.js",["127","128","129"],"import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react';\n\nexport default class Message extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n\n    }\n\n\n    render() {\n        let local_date = new Date(this.props.date) \n        let time = local_date.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'})\n\n        return (\n\n            <div className=\"message-row\">\n\n                <div className=\"message-left-col\">\n                    {this.props.showUsername === false &&\n                        <span className=\"chat-message-side-time\">{time}</span>\n                    }\n                    {this.props.showUsername === true &&\n                        <img id=\"profile-img-chat-message\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48\"></img>\n\n                    }\n                </div>\n                <div className=\"message-right-col\">\n\n                    {this.props.showUsername === true &&\n                        <div className=\"chat-message-header\">\n                            <span className=\"chat-message-username\">\n                                {this.props.username}\n                            </span>\n                            <span className=\"chat-message-time\">\n                                {time} \n                        </span>\n                        </div>\n                    }\n                    <p className=\"chat-message\">\n                        {this.props.message}\n                    </p>\n                </div>\n            </div>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/reportWebVitals.js",[],"/home/slechani/chat_app/frontend/src/Pages/Register.js",["130","131","132","133"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js",["134","135","136","137"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Icon, Button } from 'semantic-ui-react';\nimport { FaChevronDown, FaPenSquare } from 'react-icons/fa';\nimport { BsPencilSquare } from 'react-icons/bs'\n\n\nexport default class WorkspaceName extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Grid verticalAlign='middle' className=\"workspace-name-grid\" >\n                <GridRow  className=\"nopadding-nomargin\" columns=\"16\">\n                    <GridColumn className=\"nopadding-nomargin\" width=\"12\" >\n                        <div className=\"bold workspace-name \">{this.props.title} <FaChevronDown size=\"0.75em\"></FaChevronDown></div>\n                    </GridColumn>\n                    <GridColumn width=\"4\" >\n\n\n                        {/* <Button circular className=\"new-message-btn\"> */}\n                        <Icon id=\"write-messsage-icon\" circular color=\"black\"  size=\"em\" name=\"pencil square\"></Icon>\n                            {/* <BsPencilSquare color=\"#3F0E40\" size=\"1.10em\"></BsPencilSquare> */}\n                        {/* </Button> */}\n\n                    </GridColumn>\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js",["138","139"],"/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js",["140","141","142","143"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Form, Checkbox, Grid } from 'semantic-ui-react';\nimport configData from  \"../config.json\";\nimport Axios from 'axios';\n\nexport default class ChangeTopic extends Component {\n  \n    state = {\n        open: false,\n        channel_topic: \"\",\n    }\n\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    setTopic = () => {\n        const req_body = {\n            topic: this.state.channel_topic,            \n        }\n\n       Axios.patch(configData.SERVER_URL + \"channels/\" + this.props.channelId + \"/\", req_body)\n            .then((res) => {\n                this.props.refreshChannels();\n                this.setState({open: false})\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n    render() {\n        const { channel_topic} = this.state \n        return (\n            <Modal className=\"\"\n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"mini\"\n                trigger={<Button id=\"chat-channel-topic\" className=\"unstyled\">{this.props.topic}</Button>}\n            >\n                <Modal.Header className=\"create-chan-header\">Edit channel topic</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <Form class=\"\">\n                        <Form.Field required>\n                        \n                        <Form.Input\n                                placeholder='Channel topic'\n                                name='channel_topic'\n                                label=\"Channel topic\"\n                                onChange={this.handleChange}                             \n                            />\n                        </Form.Field>\n                       \n\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Cancel\n              </Button>\n                <Button positive onClick={this.setTopic}>\n                    Set Topic\n                </Button>\n                </Modal.Actions>\n            </Modal>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/UserListModal.js",["144","145"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Image, Search } from 'semantic-ui-react';\n\n\nexport default class UserListModal extends Component {\n    state = {\n        open: false,\n    }\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    render() {\n        let users = this.props && this.props.usersList.length > 0 ? \n        this.props.usersList.map((user, index) => {                   \n                return (\n                    <List.Item>\n                        <Image className=\"user-list-picture\"  src='https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48' />\n                        <List.Content>\n                           <List.Header> <p className=\"user-list-name-container\">\n                            <span className=\"user-list-name\">{user.username}</span>\n                            </p>\n                            </List.Header>\n                        </List.Content>\n                    </List.Item>\n                ) \n            }) : <span></span>\n        \n        return (\n            <Modal \n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"tiny\"\n                trigger={<button className=\"unstyled user-count-channel-btn\">\n                    <div class=\"double-button-half-left\">\n                        <img id=\"profile-img-chat\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-24\"></img>\n                    </div>\n                    <div className=\"double-button-half-right user-count-channel\">\n                        <div className=\"double-button-count\">\n                            {this.props.userList.length}\n                        </div>\n                    </div></button>}\n            >\n                <Modal.Header className=\"create-chan-header\">{this.props.userList.length} members in #{this.props.channelName}</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <button className=\"unstyled add-people-modal-btn\">\n                    <span className=\"btn-link-txt\">Add people</span>\n                    </button>\n                    <List selection verticalAlign='middle' className=\"user-list\">\n                        {users}\n                    </List>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Back\n          </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js",["146","147"],"import React, { Component } from 'react'\nimport Message from './Message';\nimport { Grid } from 'semantic-ui-react';\nimport jquery from 'jquery';\n\nexport default class MessageDisplay extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        deltaY: 0,\n        maxDelta: 0,\n    }\n\n    componentDidMount() {\n        // IE, Chrome, Safari, Opera\n        window.addEventListener(\"wheel\", this.scrollHandler);\n\n        // Firefox\n        window.addEventListener(\"DOMMouseScroll\", this.scrollHandler);\n\n        const maxDelta = jquery(\".container-content\").height() - window.innerHeight;\n\n        this.setState({\n            maxDelta\n        });\n\n        jquery(\".container-content.left\").css(\n            \"transform\",\n            `translateY(-${jquery(\".container-content\").height()}px)`\n        );\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate () {\n        this.scrollToBottom();\n    }\n\n    // Scroll to bottom of chat\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n      \n\n    scrollHandler = event => {\n        this.setState(state => {\n            let newDeltaY = state.deltaY + event.deltaY;\n\n            newDeltaY = Math.max(0, newDeltaY);\n            newDeltaY = Math.min(this.state.maxDelta, newDeltaY);\n\n            return {\n                deltaY: newDeltaY\n            };\n        });\n    };\n\n\n\n    render() {\n        /* Checking if current message username is the same as the previous one, changing display\n           of message depending on it like on the official Slack. */\n        var old_username = \"jdajzdjzajdjadjajd\"\n        let messages = this.props.messages.map((data, idx) => {\n            var showUsername = false\n            var current_username = this.props.messages[idx].sender_name\n            if (current_username != old_username)\n                showUsername = true\n            old_username = current_username\n            return (\n                <div className=\"\">\n                    <Message showUsername={showUsername} date={data.sent_date} username={data.sender_name} message={data.content}></Message>\n                </div>\n            )\n        })\n        return (\n            <Grid.Row className=\"message-display-container\">\n                <div className=\"\">\n                    {messages}\n\n                    {/* Blank div to make scroll to bottom easy */}\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n\n            </Grid.Row>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Chatbox.js",["148","149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":12,"column":5,"nodeType":"162","messageId":"163","endLine":14,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":33,"column":26,"nodeType":"166","messageId":"167","endLine":33,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":86,"column":83,"nodeType":"166","messageId":"167","endLine":86,"endColumn":85},{"ruleId":"164","severity":1,"message":"165","line":96,"column":58,"nodeType":"166","messageId":"167","endLine":96,"endColumn":60},{"ruleId":"151","replacedBy":"168"},{"ruleId":"153","replacedBy":"169"},{"ruleId":"155","severity":1,"message":"170","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":23},{"ruleId":"155","severity":1,"message":"171","line":2,"column":37,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"172","line":2,"column":46,"nodeType":"157","messageId":"158","endLine":2,"endColumn":51},{"ruleId":"155","severity":1,"message":"173","line":71,"column":13,"nodeType":"157","messageId":"158","endLine":71,"endColumn":21},{"ruleId":"155","severity":1,"message":"174","line":2,"column":25,"nodeType":"157","messageId":"158","endLine":2,"endColumn":30},{"ruleId":"155","severity":1,"message":"175","line":2,"column":46,"nodeType":"157","messageId":"158","endLine":2,"endColumn":51},{"ruleId":"155","severity":1,"message":"176","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":17},{"ruleId":"155","severity":1,"message":"177","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},{"ruleId":"155","severity":1,"message":"178","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"155","severity":1,"message":"179","line":2,"column":23,"nodeType":"157","messageId":"158","endLine":2,"endColumn":30},{"ruleId":"155","severity":1,"message":"180","line":8,"column":25,"nodeType":"157","messageId":"158","endLine":8,"endColumn":30},{"ruleId":"155","severity":1,"message":"181","line":8,"column":32,"nodeType":"157","messageId":"158","endLine":8,"endColumn":38},{"ruleId":"151","replacedBy":"182"},{"ruleId":"153","replacedBy":"183"},{"ruleId":"155","severity":1,"message":"184","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"185","line":2,"column":33,"nodeType":"157","messageId":"158","endLine":2,"endColumn":43},{"ruleId":"155","severity":1,"message":"186","line":35,"column":37,"nodeType":"157","messageId":"158","endLine":35,"endColumn":54},{"ruleId":"155","severity":1,"message":"187","line":35,"column":56,"nodeType":"157","messageId":"158","endLine":35,"endColumn":73},{"ruleId":"155","severity":1,"message":"171","line":2,"column":37,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"188","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":16},{"ruleId":"155","severity":1,"message":"189","line":7,"column":18,"nodeType":"157","messageId":"158","endLine":7,"endColumn":30},{"ruleId":"155","severity":1,"message":"190","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"155","severity":1,"message":"191","line":3,"column":25,"nodeType":"157","messageId":"158","endLine":3,"endColumn":34},{"ruleId":"155","severity":1,"message":"192","line":3,"column":50,"nodeType":"157","messageId":"158","endLine":3,"endColumn":56},{"ruleId":"164","severity":1,"message":"165","line":11,"column":26,"nodeType":"166","messageId":"167","endLine":11,"endColumn":28},{"ruleId":"151","replacedBy":"193"},{"ruleId":"153","replacedBy":"194"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":5,"column":5,"nodeType":"162","messageId":"163","endLine":7,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":27,"column":25,"nodeType":"197","endLine":27,"endColumn":132},{"ruleId":"155","severity":1,"message":"184","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"185","line":2,"column":33,"nodeType":"157","messageId":"158","endLine":2,"endColumn":43},{"ruleId":"155","severity":1,"message":"186","line":34,"column":37,"nodeType":"157","messageId":"158","endLine":34,"endColumn":54},{"ruleId":"155","severity":1,"message":"187","line":34,"column":56,"nodeType":"157","messageId":"158","endLine":34,"endColumn":73},{"ruleId":"155","severity":1,"message":"184","line":2,"column":43,"nodeType":"157","messageId":"158","endLine":2,"endColumn":49},{"ruleId":"155","severity":1,"message":"198","line":3,"column":25,"nodeType":"157","messageId":"158","endLine":3,"endColumn":36},{"ruleId":"155","severity":1,"message":"199","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":8,"column":5,"nodeType":"162","messageId":"163","endLine":10,"endColumn":6},{"ruleId":"155","severity":1,"message":"200","line":43,"column":17,"nodeType":"157","messageId":"158","endLine":43,"endColumn":29},{"ruleId":"155","severity":1,"message":"201","line":43,"column":31,"nodeType":"157","messageId":"158","endLine":43,"endColumn":43},{"ruleId":"155","severity":1,"message":"202","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"203","line":2,"column":37,"nodeType":"157","messageId":"158","endLine":2,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":2,"column":47,"nodeType":"157","messageId":"158","endLine":2,"endColumn":51},{"ruleId":"155","severity":1,"message":"204","line":37,"column":17,"nodeType":"157","messageId":"158","endLine":37,"endColumn":30},{"ruleId":"155","severity":1,"message":"205","line":2,"column":38,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"195","severity":1,"message":"196","line":38,"column":25,"nodeType":"197","endLine":38,"endColumn":124},{"ruleId":"160","severity":1,"message":"161","line":7,"column":5,"nodeType":"162","messageId":"163","endLine":10,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":69,"column":34,"nodeType":"166","messageId":"167","endLine":69,"endColumn":36},{"ruleId":"155","severity":1,"message":"172","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"206","line":2,"column":32,"nodeType":"157","messageId":"158","endLine":2,"endColumn":41},{"ruleId":"155","severity":1,"message":"207","line":2,"column":61,"nodeType":"157","messageId":"158","endLine":2,"endColumn":72},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'FaChevronDown' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["208"],["209"],"'GridRow' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'messages' is assigned a value but never used.","'Image' is defined but never used.","'Popup' is defined but never used.","'FaPause' is defined but never used.","'BsStar' is defined but never used.","'VscInfo' is defined but never used.","'Segment' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.",["208"],["209"],"'Button' is defined but never used.","'GridColumn' is defined but never used.","'submittedUsername' is assigned a value but never used.","'submittedPassword' is assigned a value but never used.","'FaPlus' is defined but never used.","'FaPlusSquare' is defined but never used.","'Chat' is defined but never used.","'FaHashtag' is defined but never used.","'FaUser' is defined but never used.",["208"],["209"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaPenSquare' is defined but never used.","'BsPencilSquare' is defined but never used.","'channel_name' is assigned a value but never used.","'channel_desc' is assigned a value but never used.","'List' is defined but never used.","'Checkbox' is defined but never used.","'channel_topic' is assigned a value but never used.","'Search' is defined but never used.","'Container' is defined but never used.","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]