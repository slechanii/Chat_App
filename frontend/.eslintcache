[{"/home/slechani/chat_app/frontend/src/Pages/Workspace.js":"1","/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js":"2","/home/slechani/chat_app/frontend/src/Components/Chat.js":"3","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js":"4","/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js":"5","/home/slechani/chat_app/frontend/src/index.js":"6","/home/slechani/chat_app/frontend/src/Pages/Login.js":"7","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js":"8","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js":"9","/home/slechani/chat_app/frontend/src/Components/Message.js":"10","/home/slechani/chat_app/frontend/src/reportWebVitals.js":"11","/home/slechani/chat_app/frontend/src/Pages/Register.js":"12","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js":"13","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js":"14","/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js":"15","/home/slechani/chat_app/frontend/src/Components/UserListModal.js":"16","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js":"17"},{"size":2320,"mtime":1609003175513,"results":"18","hashOfConfig":"19"},{"size":4239,"mtime":1609002477768,"results":"20","hashOfConfig":"19"},{"size":2773,"mtime":1609003391952,"results":"21","hashOfConfig":"19"},{"size":3125,"mtime":1608915667944,"results":"22","hashOfConfig":"19"},{"size":3410,"mtime":1608908363979,"results":"23","hashOfConfig":"19"},{"size":628,"mtime":1608439606892,"results":"24","hashOfConfig":"19"},{"size":2230,"mtime":1607971620643,"results":"25","hashOfConfig":"19"},{"size":2968,"mtime":1609001970591,"results":"26","hashOfConfig":"19"},{"size":3875,"mtime":1608924077195,"results":"27","hashOfConfig":"19"},{"size":1597,"mtime":1608661523969,"results":"28","hashOfConfig":"19"},{"size":362,"mtime":1607523001563,"results":"29","hashOfConfig":"19"},{"size":2275,"mtime":1607971464348,"results":"30","hashOfConfig":"19"},{"size":1241,"mtime":1608746465054,"results":"31","hashOfConfig":"19"},{"size":4292,"mtime":1608905176719,"results":"32","hashOfConfig":"19"},{"size":2350,"mtime":1608910683121,"results":"33","hashOfConfig":"19"},{"size":2596,"mtime":1608922314486,"results":"34","hashOfConfig":"19"},{"size":2623,"mtime":1608659956762,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nhe71c",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},"/home/slechani/chat_app/frontend/src/Pages/Workspace.js",[],"/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js",["78","79","80","81"],"/home/slechani/chat_app/frontend/src/Components/Chat.js",["82","83","84","85"],"/home/slechani/chat_app/frontend/src/Components/ChatHeader.js",["86","87","88","89","90"],"/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js",["91"],"/home/slechani/chat_app/frontend/src/index.js",["92","93"],"import '../node_modules/semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["94","95"],"/home/slechani/chat_app/frontend/src/Pages/Login.js",["96","97","98","99"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = { username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,}\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.loginAccount(username, password)        \n    }\n\n    loginAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"token/\", {username:username, password:password})\n        .then(res => {\n            localStorage.setItem(\"username\", username)\n            this.setState({redirect:true})\n        })\n        .catch(error => {\n            alert(\"Error : \" + error)\n        })\n    }\n\n    render() {\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        const { username, password, submittedUsername, submittedPassword } = this.state \n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Login' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js",["100","101","102","103"],"/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js",["104","105","106","107","108"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List, Icon } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaUser, FaUserAlt, FaPlus } from 'react-icons/fa';\nexport default class MessagesMenu extends Component {\n    state = {\n        activeIndex: 0,\n        hover: false,\n    };\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({hover: mouse_status})\n    }\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <GridRow className=\"side-menu-item\" columns=\"16\"  >\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title  onMouseEnter={() => {this.handleHover(true)}} onMouseLeave={() => {this.handleHover(false)}} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                           \n                        >\n                                <Icon className=\"white\" color=\"white\" name=\"dropdown\"></Icon>\n                            <span className=\"bold white\">Direct messages</span>\n\n                            {/* Start chat hover icon */}\n                            { this.state.hover === true &&\n                            <span className=\"menu-side-icon-container\">\n                                <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                            </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>admin</span>\n                                        <span>you</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>John</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>Jane</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaPlusSquare></FaPlusSquare></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        Send direct message\n                                    </List.Content>\n                                </List.Item>\n\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn>\n            </GridRow>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Message.js",["109","110","111"],"import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react';\n\nexport default class Message extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n\n    }\n\n\n    render() {\n        let local_date = new Date(this.props.date) \n        let time = local_date.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'})\n\n        return (\n\n            <div className=\"message-row\">\n\n                <div className=\"message-left-col\">\n                    {this.props.showUsername === false &&\n                        <span className=\"chat-message-side-time\">{time}</span>\n                    }\n                    {this.props.showUsername === true &&\n                        <img id=\"profile-img-chat-message\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48\"></img>\n\n                    }\n                </div>\n                <div className=\"message-right-col\">\n\n                    {this.props.showUsername === true &&\n                        <div className=\"chat-message-header\">\n                            <span className=\"chat-message-username\">\n                                {this.props.username}\n                            </span>\n                            <span className=\"chat-message-time\">\n                                {time} \n                        </span>\n                        </div>\n                    }\n                    <p className=\"chat-message\">\n                        {this.props.message}\n                    </p>\n                </div>\n            </div>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/reportWebVitals.js",[],"/home/slechani/chat_app/frontend/src/Pages/Register.js",["112","113","114","115"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js",["116","117","118","119"],"/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js",["120","121"],"/home/slechani/chat_app/frontend/src/Components/ChangeTopic.js",["122","123","124","125"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Form, Checkbox, Grid } from 'semantic-ui-react';\nimport configData from  \"../config.json\";\nimport Axios from 'axios';\n\nexport default class ChangeTopic extends Component {\n  \n    state = {\n        open: false,\n        channel_topic: \"\",\n    }\n\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    setTopic = () => {\n        const req_body = {\n            topic: this.state.channel_topic,            \n        }\n\n       Axios.patch(configData.SERVER_URL + \"channels/\" + this.props.channelId + \"/\", req_body)\n            .then((res) => {\n                this.props.refreshChannels();\n                this.setState({open: false})\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n    render() {\n        const { channel_topic} = this.state \n        return (\n            <Modal className=\"\"\n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"mini\"\n                trigger={<Button id=\"chat-channel-topic\" className=\"unstyled\">{this.props.topic}</Button>}\n            >\n                <Modal.Header className=\"create-chan-header\">Edit channel topic</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <Form class=\"\">\n                        <Form.Field required>\n                        \n                        <Form.Input\n                                placeholder='Channel topic'\n                                name='channel_topic'\n                                label=\"Channel topic\"\n                                onChange={this.handleChange}                             \n                            />\n                        </Form.Field>\n                       \n\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Cancel\n              </Button>\n                <Button positive onClick={this.setTopic}>\n                    Set Topic\n                </Button>\n                </Modal.Actions>\n            </Modal>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/UserListModal.js",["126","127"],"import React, { Component } from 'react'\nimport { Modal, List, Button, Image, Search } from 'semantic-ui-react';\n\n\nexport default class UserListModal extends Component {\n    state = {\n        open: false,\n    }\n\n    setOpen = (open) => {\n        this.setState({ open: open })\n    }\n\n    render() {\n        let users = this.props && this.props.usersList.length > 0 ? \n        this.props.usersList.map((user, index) => {                   \n                return (\n                    <List.Item>\n                        <Image className=\"user-list-picture\"  src='https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48' />\n                        <List.Content>\n                           <List.Header> <p className=\"user-list-name-container\">\n                            <span className=\"user-list-name\">{user.username}</span>\n                            </p>\n                            </List.Header>\n                        </List.Content>\n                    </List.Item>\n                ) \n            }) : <span></span>\n        \n        return (\n            <Modal \n                onClose={() => this.setOpen(false)}\n                onOpen={() => this.setOpen(true)}\n                open={this.state.open}\n                size=\"tiny\"\n                trigger={<button className=\"unstyled user-count-channel-btn\">\n                    <div class=\"double-button-half-left\">\n                        <img id=\"profile-img-chat\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-24\"></img>\n                    </div>\n                    <div className=\"double-button-half-right user-count-channel\">\n                        <div className=\"double-button-count\">\n                            {this.props.userList.length}\n                        </div>\n                    </div></button>}\n            >\n                <Modal.Header className=\"create-chan-header\">{this.props.userList.length} members in #{this.props.channelName}</Modal.Header>\n                <Modal.Content className=\"create-chan-content\">\n                    <button className=\"unstyled add-people-modal-btn\">\n                    <span className=\"btn-link-txt\">Add people</span>\n                    </button>\n                    <List selection verticalAlign='middle' className=\"user-list\">\n                        {users}\n                    </List>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => this.setOpen(false)}>\n                        Back\n          </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js",["128","129"],"import React, { Component } from 'react'\nimport Message from './Message';\nimport { Grid } from 'semantic-ui-react';\nimport jquery from 'jquery';\n\nexport default class MessageDisplay extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        deltaY: 0,\n        maxDelta: 0,\n    }\n\n    componentDidMount() {\n        // IE, Chrome, Safari, Opera\n        window.addEventListener(\"wheel\", this.scrollHandler);\n\n        // Firefox\n        window.addEventListener(\"DOMMouseScroll\", this.scrollHandler);\n\n        const maxDelta = jquery(\".container-content\").height() - window.innerHeight;\n\n        this.setState({\n            maxDelta\n        });\n\n        jquery(\".container-content.left\").css(\n            \"transform\",\n            `translateY(-${jquery(\".container-content\").height()}px)`\n        );\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate () {\n        this.scrollToBottom();\n    }\n\n    // Scroll to bottom of chat\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n      \n\n    scrollHandler = event => {\n        this.setState(state => {\n            let newDeltaY = state.deltaY + event.deltaY;\n\n            newDeltaY = Math.max(0, newDeltaY);\n            newDeltaY = Math.min(this.state.maxDelta, newDeltaY);\n\n            return {\n                deltaY: newDeltaY\n            };\n        });\n    };\n\n\n\n    render() {\n        /* Checking if current message username is the same as the previous one, changing display\n           of message depending on it like on the official Slack. */\n        var old_username = \"jdajzdjzajdjadjajd\"\n        let messages = this.props.messages.map((data, idx) => {\n            var showUsername = false\n            var current_username = this.props.messages[idx].sender_name\n            if (current_username != old_username)\n                showUsername = true\n            old_username = current_username\n            return (\n                <div className=\"\">\n                    <Message showUsername={showUsername} date={data.sent_date} username={data.sender_name} message={data.content}></Message>\n                </div>\n            )\n        })\n        return (\n            <Grid.Row className=\"message-display-container\">\n                <div className=\"\">\n                    {messages}\n\n                    {/* Blank div to make scroll to bottom easy */}\n                    <div style={{ float: \"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n\n            </Grid.Row>\n        )\n    }\n}\n",{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":12,"column":5,"nodeType":"137","messageId":"138","endLine":14,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":33,"column":26,"nodeType":"141","messageId":"142","endLine":33,"endColumn":28},{"ruleId":"130","severity":1,"message":"143","line":2,"column":16,"nodeType":"132","messageId":"133","endLine":2,"endColumn":23},{"ruleId":"130","severity":1,"message":"144","line":2,"column":37,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"145","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":51},{"ruleId":"130","severity":1,"message":"146","line":51,"column":13,"nodeType":"132","messageId":"133","endLine":51,"endColumn":21},{"ruleId":"130","severity":1,"message":"147","line":2,"column":25,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"148","line":2,"column":40,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"149","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":51},{"ruleId":"130","severity":1,"message":"150","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"151","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":17},{"ruleId":"130","severity":1,"message":"152","line":2,"column":23,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"153","line":8,"column":25,"nodeType":"132","messageId":"133","endLine":8,"endColumn":30},{"ruleId":"130","severity":1,"message":"154","line":8,"column":32,"nodeType":"132","messageId":"133","endLine":8,"endColumn":38},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"130","severity":1,"message":"159","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"160","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":43},{"ruleId":"130","severity":1,"message":"161","line":35,"column":37,"nodeType":"132","messageId":"133","endLine":35,"endColumn":54},{"ruleId":"130","severity":1,"message":"162","line":35,"column":56,"nodeType":"132","messageId":"133","endLine":35,"endColumn":73},{"ruleId":"130","severity":1,"message":"144","line":2,"column":37,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"163","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":16},{"ruleId":"130","severity":1,"message":"164","line":7,"column":18,"nodeType":"132","messageId":"133","endLine":7,"endColumn":30},{"ruleId":"130","severity":1,"message":"165","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":12},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":23},{"ruleId":"130","severity":1,"message":"166","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":34},{"ruleId":"130","severity":1,"message":"167","line":3,"column":50,"nodeType":"132","messageId":"133","endLine":3,"endColumn":56},{"ruleId":"139","severity":1,"message":"140","line":11,"column":26,"nodeType":"141","messageId":"142","endLine":11,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":5,"column":5,"nodeType":"137","messageId":"138","endLine":7,"endColumn":6},{"ruleId":"168","severity":1,"message":"169","line":27,"column":25,"nodeType":"170","endLine":27,"endColumn":132},{"ruleId":"130","severity":1,"message":"159","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"160","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":43},{"ruleId":"130","severity":1,"message":"161","line":34,"column":37,"nodeType":"132","messageId":"133","endLine":34,"endColumn":54},{"ruleId":"130","severity":1,"message":"162","line":34,"column":56,"nodeType":"132","messageId":"133","endLine":34,"endColumn":73},{"ruleId":"130","severity":1,"message":"159","line":2,"column":43,"nodeType":"132","messageId":"133","endLine":2,"endColumn":49},{"ruleId":"130","severity":1,"message":"171","line":3,"column":25,"nodeType":"132","messageId":"133","endLine":3,"endColumn":36},{"ruleId":"130","severity":1,"message":"172","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":8,"column":5,"nodeType":"137","messageId":"138","endLine":10,"endColumn":6},{"ruleId":"130","severity":1,"message":"173","line":42,"column":17,"nodeType":"132","messageId":"133","endLine":42,"endColumn":29},{"ruleId":"130","severity":1,"message":"174","line":42,"column":31,"nodeType":"132","messageId":"133","endLine":42,"endColumn":43},{"ruleId":"130","severity":1,"message":"175","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"176","line":2,"column":37,"nodeType":"132","messageId":"133","endLine":2,"endColumn":45},{"ruleId":"130","severity":1,"message":"131","line":2,"column":47,"nodeType":"132","messageId":"133","endLine":2,"endColumn":51},{"ruleId":"130","severity":1,"message":"177","line":37,"column":17,"nodeType":"132","messageId":"133","endLine":37,"endColumn":30},{"ruleId":"130","severity":1,"message":"178","line":2,"column":38,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"168","severity":1,"message":"169","line":38,"column":25,"nodeType":"170","endLine":38,"endColumn":124},{"ruleId":"135","severity":1,"message":"136","line":7,"column":5,"nodeType":"137","messageId":"138","endLine":10,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":69,"column":34,"nodeType":"141","messageId":"142","endLine":69,"endColumn":36},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'FaChevronDown' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'GridRow' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'messages' is assigned a value but never used.","'Image' is defined but never used.","'Icon' is defined but never used.","'Popup' is defined but never used.","'FaPause' is defined but never used.","'VscInfo' is defined but never used.","'Segment' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'Button' is defined but never used.","'GridColumn' is defined but never used.","'submittedUsername' is assigned a value but never used.","'submittedPassword' is assigned a value but never used.","'FaPlus' is defined but never used.","'FaPlusSquare' is defined but never used.","'Chat' is defined but never used.","'FaHashtag' is defined but never used.","'FaUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaPenSquare' is defined but never used.","'BsPencilSquare' is defined but never used.","'channel_name' is assigned a value but never used.","'channel_desc' is assigned a value but never used.","'List' is defined but never used.","'Checkbox' is defined but never used.","'channel_topic' is assigned a value but never used.","'Search' is defined but never used.","no-global-assign","no-unsafe-negation"]