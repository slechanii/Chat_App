[{"/home/slechani/chat_app/frontend/src/reportWebVitals.js":"1","/home/slechani/chat_app/frontend/src/App.js":"2","/home/slechani/chat_app/frontend/src/index.js":"3","/home/slechani/chat_app/frontend/src/Components/About.js":"4","/home/slechani/chat_app/frontend/src/Pages/Register.js":"5","/home/slechani/chat_app/frontend/src/Pages/Login.js":"6","/home/slechani/chat_app/frontend/src/Pages/Workspace.js":"7","/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js":"8","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js":"9","/home/slechani/chat_app/frontend/src/Components/Chat.js":"10","/home/slechani/chat_app/frontend/src/Components/WorkspaceSideMenu.js":"11","/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js":"12","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js":"13","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js":"14","/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js":"15","/home/slechani/chat_app/frontend/src/Components/Message.js":"16","/home/slechani/chat_app/frontend/src/Components/Chatbox.js":"17","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js":"18","/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js":"19"},{"size":362,"mtime":1607523001563,"results":"20","hashOfConfig":"21"},{"size":615,"mtime":1608439575519,"results":"22","hashOfConfig":"21"},{"size":628,"mtime":1608439606892,"results":"23","hashOfConfig":"21"},{"size":213,"mtime":1607611994307,"results":"24","hashOfConfig":"21"},{"size":2275,"mtime":1607971464348,"results":"25","hashOfConfig":"21"},{"size":2230,"mtime":1607971620643,"results":"26","hashOfConfig":"21"},{"size":975,"mtime":1608223645580,"results":"27","hashOfConfig":"21"},{"size":2766,"mtime":1608746839524,"results":"28","hashOfConfig":"21"},{"size":1241,"mtime":1608746465054,"results":"29","hashOfConfig":"21"},{"size":2210,"mtime":1608654476569,"results":"30","hashOfConfig":"21"},{"size":484,"mtime":1607874744074,"results":"31","hashOfConfig":"21"},{"size":5095,"mtime":1608753451381,"results":"32","hashOfConfig":"21"},{"size":3836,"mtime":1607944772896,"results":"33","hashOfConfig":"21"},{"size":2575,"mtime":1608810459355,"results":"34","hashOfConfig":"21"},{"size":2623,"mtime":1608659956762,"results":"35","hashOfConfig":"21"},{"size":1597,"mtime":1608661523969,"results":"36","hashOfConfig":"21"},{"size":2907,"mtime":1608585385797,"results":"37","hashOfConfig":"21"},{"size":4304,"mtime":1608753651515,"results":"38","hashOfConfig":"21"},{"size":1274,"mtime":1608810964212,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"nhe71c",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/slechani/chat_app/frontend/src/reportWebVitals.js",[],["92","93"],"/home/slechani/chat_app/frontend/src/App.js",["94","95"],"import logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './Pages/Login'; \nimport Register from './Pages/Register';\nimport Workspace from './Pages/Workspace';\nfunction App() {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/workspace\" component={Workspace} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;\n",["96","97"],"/home/slechani/chat_app/frontend/src/index.js",["98","99"],"import '../node_modules/semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["100","101"],"/home/slechani/chat_app/frontend/src/Components/About.js",[],"/home/slechani/chat_app/frontend/src/Pages/Register.js",["102","103","104","105"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = {\n        username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,\n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.registerAccount(username, password)\n    }\n\n    registerAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"users/\", { username: username, password: password })\n            .then(res => {\n                localStorage.setItem(\"username\", username)\n                this.setState({redirect:true})\n            })\n            .catch(error => {\n                alert(\"Error : \" + error)\n            })\n    }\n\n    render() {\n        const { username, password, submittedUsername, submittedPassword } = this.state\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Register' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n",["106","107"],"/home/slechani/chat_app/frontend/src/Pages/Login.js",["108","109","110","111"],"import React, { Component } from 'react'\nimport { Button, Grid, GridRow, GridColumn, Form } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport configData from  \"../config.json\";\n\nexport default class Register extends Component {\n\n    state = { username: '', password: '', submittedUsername: '', submittedPassword: '', redirect: false,}\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n        const { username, password } = this.state\n\n        this.setState({ submittedUsername: username, submittedPassword: password })\n        this.loginAccount(username, password)        \n    }\n\n    loginAccount = (username, password) => {\n        axios.post(configData.SERVER_URL + \"token/\", {username:username, password:password})\n        .then(res => {\n            localStorage.setItem(\"username\", username)\n            this.setState({redirect:true})\n        })\n        .catch(error => {\n            alert(\"Error : \" + error)\n        })\n    }\n\n    render() {\n        if (this.state.redirect === true){\n            return <Redirect to=\"/workspace\" />\n        }\n        const { username, password, submittedUsername, submittedPassword } = this.state \n        return (\n            <Grid verticalAlign=\"middle\" columns={4} >\n                <GridRow verticalAlign=\"middle\" centered>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Username'\n                                name='username'\n                                value={username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Button content='Login' />\n                        </Form.Group>\n                    </Form>\n\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Pages/Workspace.js",[],"/home/slechani/chat_app/frontend/src/Components/WorkspaceMenu.js",["112","113","114","115"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Divider } from 'semantic-ui-react';\nimport WorkspaceName from './WorkspaceName';\nimport { VscFiles } from 'react-icons/vsc';\nimport { BsBookmark } from 'react-icons/bs';\nimport ChannelsMenu from './ChannelsMenu';\nimport { FaPlus, FaPlusSquare } from 'react-icons/fa';\nimport MessagesMenu from './MessagesMenu';\nimport Chat from './Chat';\n\nexport default class WorkspaceMenu extends Component {\n\n    state = {\n        refreshChat: false,\n    }\n\n    changeState = (name, value) => {\n        this.setState({[name]:value})\n    }\n\n    render() {\n        if (this.state.refreshChat === true){\n            this.setState({refreshChat: false})\n            this.props.changeState(\"refreshChat\", true)\n        }\n        \n        return (\n            <GridColumn className=\"workspace-menu\" width={2}>\n                <Grid >\n                    <GridRow className=\"workspace-main-row\">\n                        <GridColumn className=\"nopadding-nomargin\"  >\n                            {/* <Divider className=\"workspace-menu-divider\"></Divider> */}\n                            <WorkspaceName title=\"Your Workspace\"></WorkspaceName>\n                            {/* <Divider className=\"workspace-menu-divider\"></Divider> */}\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Drafts */}\n                    <GridRow  id=\"drafts-row\" columns=\"16\" className=\"workspace-submenu-row\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <VscFiles></VscFiles>\n                        </GridColumn>\n                        <GridColumn className=\"nopadding-nomargin\" width=\"15\">\n                            <span className=\"bold workspace-menu-text\">Drafts</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Saved Items */}\n                    <GridRow columns=\"16\" className=\"workspace-submenu-row\" >\n                        <GridColumn className=\"icon-col\" width=\"1\" >\n                            <BsBookmark></BsBookmark>\n                        </GridColumn>\n                        <GridColumn className=\"nopadding-nomargin\" width=\"15\">\n                            <span className=\"bold workspace-menu-text\">Saved items</span>\n                        </GridColumn>\n                    </GridRow>\n\n                    {/* Channels list */}\n                    <ChannelsMenu changeState={this.changeState} ></ChannelsMenu>\n                    <MessagesMenu></MessagesMenu>\n                   \n                </Grid>\n                <GridColumn width={14}> \n                   {/* <Chat></Chat> */}\n            </GridColumn>\n            </GridColumn>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/WorkspaceName.js",["116","117","118","119"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Icon, Button } from 'semantic-ui-react';\nimport { FaChevronDown, FaPenSquare } from 'react-icons/fa';\nimport { BsPencilSquare } from 'react-icons/bs'\n\n\nexport default class WorkspaceName extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Grid verticalAlign='middle' className=\"workspace-name-grid\" >\n                <GridRow  className=\"nopadding-nomargin\" columns=\"16\">\n                    <GridColumn className=\"nopadding-nomargin\" width=\"12\" >\n                        <div className=\"bold workspace-name \">{this.props.title} <FaChevronDown size=\"0.75em\"></FaChevronDown></div>\n                    </GridColumn>\n                    <GridColumn width=\"4\" >\n\n\n                        {/* <Button circular className=\"new-message-btn\"> */}\n                        <Icon id=\"write-messsage-icon\" circular color=\"black\"  size=\"em\" name=\"pencil square\"></Icon>\n                            {/* <BsPencilSquare color=\"#3F0E40\" size=\"1.10em\"></BsPencilSquare> */}\n                        {/* </Button> */}\n\n                    </GridColumn>\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Chat.js",["120","121","122","123"],"/home/slechani/chat_app/frontend/src/Components/WorkspaceSideMenu.js",["124"],"/home/slechani/chat_app/frontend/src/Components/ChannelsMenu.js",["125","126","127","128"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List, Modal } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaPlus } from 'react-icons/fa';\nimport axios from 'axios';\nimport configData from \"../config.json\";\nimport { Redirect } from \"react-router-dom\";\nimport AddChannelModal from './AddChannelModal.js';\n// import { ModalExampleModal } from \"../Components/AddChannelModal\";\n\n\n\nexport default class ChannelsMenu extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        activeIndex: 0,\n        hover: false,\n        channels: [],\n        profile_id: null,\n        redirect: false,\n        channel_to_load: null,\n    };\n\n    getProfile = () => {\n        axios.post(configData.SERVER_URL + \"getProfile/\", { \"username\": localStorage.getItem(\"username\") })\n            .then((result) => {\n                // alert(JSON.stringify(result))          \n                // this.setState({channels: result.data})\n                this.setState({ profile_id: result.data })\n                localStorage.setItem(\"user_id\", result.data)\n                this.getChannels();\n            })\n            .catch((error) => { console.log(error) })\n    }\n\n    loadChannel = (channel_id) => {\n        const url = \"/workspace/\" + channel_id\n        this.setState({ redirect: true })\n        this.setState({ channel_to_load: url })\n    }\n\n    componentDidMount() {\n        this.getProfile();\n        // this.getChannels();\n    }\n    /*\n        Get subscribed channels / GET / params : profile_id         \n    */\n    getChannels = () => {\n        axios.post(configData.SERVER_URL + \"getChannels/\", { \"profile_id\": this.state.profile_id })\n            .then((result) => {\n                this.setState({ channels: result.data })\n                // alert(JSON.stringify(result))\n                // localStorage.setItem(\"\")\n            })\n            .catch((error) => { console.log(error) })\n    }\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({ hover: mouse_status })\n\n    }\n\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        const channels = this.state.channels.map((data, idx) => {\n            return (\n                <List.Item onClick={() => { this.loadChannel(data.id) }} className=\"workspace-submenu-row\">\n                    <List.Icon > <FaHashtag></FaHashtag></List.Icon>\n                    <List.Content className=\"channel-title-menu\">\n                        {data.name}\n                        {/* data.id */}\n                    </List.Content>\n                </List.Item>\n            )\n        })\n\n        if (this.state.redirect === true) {\n            this.setState({ redirect: false })\n            this.setState({ channel_to_load: null })\n            this.props.changeState(\"refreshChat\", true)\n            return <Redirect to={this.state.channel_to_load} />\n        }\n\n        return (\n            <GridRow className=\"nopadding-nomargin\" columns=\"16\"  >\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title onMouseEnter={() => { this.handleHover(true) }} onMouseLeave={() => { this.handleHover(false) }} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                        >\n                            <FaChevronDown color=\"white\"></FaChevronDown>\n                            <span className=\"bold workspace-menu-text\">Channels</span>\n                            {/* Add Channel hover icon */}\n                            {this.state.hover === true &&\n                                <span className=\"menu-side-icon-container\">\n                                    <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                                </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n\n                                {channels}\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon >       <FaPlusSquare ></FaPlusSquare></List.Icon>\n                                    \n                                        {/* Add channels */}\n                                    <AddChannelModal refreshChannels={this.getChannels}></AddChannelModal>\n                                \n\n                                </List.Item>\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn>\n            </GridRow>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/MessagesMenu.js",["129","130","131","132"],"import React, { Component } from 'react'\nimport { Grid, GridRow, GridColumn, Accordion, List } from 'semantic-ui-react';\nimport { FaChevronDown, FaHashtag, FaPlusSquare, FaUser, FaUserAlt, FaPlus } from 'react-icons/fa';\nexport default class MessagesMenu extends Component {\n    state = {\n        activeIndex: 0,\n        hover: false,\n    };\n\n    handleHover = (mouse_status) => {\n        if (mouse_status != this.state.hover)\n            this.setState({hover: mouse_status})\n    }\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <GridRow columns=\"16\"  >\n                <GridColumn width=\"16\">\n                    <Accordion>\n                        <Accordion.Title  onMouseEnter={() => {this.handleHover(true)}} onMouseLeave={() => {this.handleHover(false)}} className=\"workspace-submenu-row\"\n                            active={activeIndex === 0}\n                            index={0}\n                            onClick={this.handleClick}\n                           \n                        >\n                            <FaChevronDown color=\"white\"></FaChevronDown>\n                            <span className=\"bold workspace-menu-text\">Direct messages</span>\n\n                            {/* Start chat hover icon */}\n                            { this.state.hover === true &&\n                            <span className=\"menu-side-icon-container\">\n                                <FaPlus className=\"menu-side-icon\" color=\"white\" size=\"0.9em\"></FaPlus>\n                            </span>\n                            }\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                            <List className=\"collapsible-menu-list\">\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>admin</span>\n                                        <span>you</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>John</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaUserAlt></FaUserAlt></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        <span>Jane</span>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className=\"workspace-submenu-row\">\n                                    <List.Icon > <FaPlusSquare></FaPlusSquare></List.Icon>\n                                    <List.Content className=\"channel-title-menu\">\n                                        Send direct message\n                                    </List.Content>\n                                </List.Item>\n\n                            </List>\n                        </Accordion.Content>\n                    </Accordion>\n                </GridColumn>\n            </GridRow>\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/ChatHeader.js",["133","134","135","136","137","138"],"/home/slechani/chat_app/frontend/src/Components/MessageDisplay.js",["139","140"],"/home/slechani/chat_app/frontend/src/Components/Message.js",["141","142","143"],"import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react';\n\nexport default class Message extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n\n    }\n\n\n    render() {\n        let local_date = new Date(this.props.date) \n        let time = local_date.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'})\n\n        return (\n\n            <div className=\"message-row\">\n\n                <div className=\"message-left-col\">\n                    {this.props.showUsername === false &&\n                        <span className=\"chat-message-side-time\">{time}</span>\n                    }\n                    {this.props.showUsername === true &&\n                        <img id=\"profile-img-chat-message\" src=\"https://ca.slack-edge.com/T01GTD2333N-U01GJ5P688M-gb0c7d943951-48\"></img>\n\n                    }\n                </div>\n                <div className=\"message-right-col\">\n\n                    {this.props.showUsername === true &&\n                        <div className=\"chat-message-header\">\n                            <span className=\"chat-message-username\">\n                                {this.props.username}\n                            </span>\n                            <span className=\"chat-message-time\">\n                                {time} \n                        </span>\n                        </div>\n                    }\n                    <p className=\"chat-message\">\n                        {this.props.message}\n                    </p>\n                </div>\n            </div>\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/Chatbox.js",["144","145","146"],"import React, { Component } from 'react'\nimport { Grid, Input, GridRow, Container, TextArea, Button, ButtonGroup, Icon } from 'semantic-ui-react'\nimport Axios from 'axios';\nimport configData from  \"../config.json\";\n\nexport default class Chatbox extends Component {\n\n    state = {\n        messageContent : \"\",       \n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    sendMessage = () => {\n   \n        let message_to_send = {\n       \n            content: this.state.messageContent,\n            sender_id: localStorage.getItem(\"user_id\"),\n            destination_id: window.location.pathname.split('/')[2], \n        }\n      Axios.post(configData.SERVER_URL + \"messages/\", message_to_send)\n           .then((res) => {\n               this.props.refreshMessages()\n               document.getElementById(\"textarea-chat\").reset();\n               this.setState({messageContent:\"\"})\n           })\n           .catch((err) => {\n               console.log(err)\n           })\n    }\n\n    render() {\n        return (\n            <Grid.Row className=\"chatbox-container\">\n                <Grid className=\"chatbox\">\n                    <Grid.Row className=\"chatbox-textarea-row\">\n                    <form className=\"unstyled\" id=\"textarea-chat\">\n                        <TextArea  name=\"messageContent\" onChange={this.handleChange} placeholder=\"Send a message to #channel\" className=\"chatbox-input\"></TextArea>\n                    </form>\n                    </Grid.Row>\n                    <GridRow className=\"chatbox-formatting-row\">\n                        <Button.Group>\n                            <Button icon>\n                                <Icon name='bold' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='italic' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='strikethrough' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='code' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='ordered list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='bulleted list' />\n                            </Button>\n                            <Button icon>\n                                <Icon name='quote left' />\n                            </Button>\n                        </Button.Group>\n                    \n                            <Button onClick={this.sendMessage} icon>\n                                <Icon name='send' />\n                            </Button>\n                       \n\n\n                    </GridRow>\n                </Grid>\n            </Grid.Row>\n\n\n\n        )\n    }\n}\n","/home/slechani/chat_app/frontend/src/Components/AddChannelModal.js",["147","148","149","150"],"/home/slechani/chat_app/frontend/src/Components/ChannelMenu.js",["151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":12},{"ruleId":"157","severity":1,"message":"161","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":23},{"ruleId":"153","replacedBy":"162"},{"ruleId":"155","replacedBy":"163"},{"ruleId":"157","severity":1,"message":"164","line":8,"column":25,"nodeType":"159","messageId":"160","endLine":8,"endColumn":30},{"ruleId":"157","severity":1,"message":"165","line":8,"column":32,"nodeType":"159","messageId":"160","endLine":8,"endColumn":38},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"169","line":2,"column":33,"nodeType":"159","messageId":"160","endLine":2,"endColumn":43},{"ruleId":"157","severity":1,"message":"170","line":34,"column":37,"nodeType":"159","messageId":"160","endLine":34,"endColumn":54},{"ruleId":"157","severity":1,"message":"171","line":34,"column":56,"nodeType":"159","messageId":"160","endLine":34,"endColumn":73},{"ruleId":"153","replacedBy":"172"},{"ruleId":"155","replacedBy":"173"},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"169","line":2,"column":33,"nodeType":"159","messageId":"160","endLine":2,"endColumn":43},{"ruleId":"157","severity":1,"message":"170","line":35,"column":37,"nodeType":"159","messageId":"160","endLine":35,"endColumn":54},{"ruleId":"157","severity":1,"message":"171","line":35,"column":56,"nodeType":"159","messageId":"160","endLine":35,"endColumn":73},{"ruleId":"157","severity":1,"message":"174","line":2,"column":37,"nodeType":"159","messageId":"160","endLine":2,"endColumn":44},{"ruleId":"157","severity":1,"message":"175","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":16},{"ruleId":"157","severity":1,"message":"176","line":7,"column":18,"nodeType":"159","messageId":"160","endLine":7,"endColumn":30},{"ruleId":"157","severity":1,"message":"177","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":12},{"ruleId":"157","severity":1,"message":"168","line":2,"column":43,"nodeType":"159","messageId":"160","endLine":2,"endColumn":49},{"ruleId":"157","severity":1,"message":"178","line":3,"column":25,"nodeType":"159","messageId":"160","endLine":3,"endColumn":36},{"ruleId":"157","severity":1,"message":"179","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":8,"column":5,"nodeType":"182","messageId":"183","endLine":10,"endColumn":6},{"ruleId":"157","severity":1,"message":"184","line":2,"column":16,"nodeType":"159","messageId":"160","endLine":2,"endColumn":23},{"ruleId":"157","severity":1,"message":"174","line":2,"column":37,"nodeType":"159","messageId":"160","endLine":2,"endColumn":44},{"ruleId":"157","severity":1,"message":"185","line":2,"column":46,"nodeType":"159","messageId":"160","endLine":2,"endColumn":51},{"ruleId":"157","severity":1,"message":"186","line":44,"column":13,"nodeType":"159","messageId":"160","endLine":44,"endColumn":21},{"ruleId":"187","severity":2,"message":"188","line":11,"column":22,"nodeType":"189","endLine":11,"endColumn":30},{"ruleId":"157","severity":1,"message":"190","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"191","line":2,"column":54,"nodeType":"159","messageId":"160","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"181","line":14,"column":5,"nodeType":"182","messageId":"183","endLine":16,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":63,"column":26,"nodeType":"194","messageId":"195","endLine":63,"endColumn":28},{"ruleId":"157","severity":1,"message":"190","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"196","line":3,"column":25,"nodeType":"159","messageId":"160","endLine":3,"endColumn":34},{"ruleId":"157","severity":1,"message":"197","line":3,"column":50,"nodeType":"159","messageId":"160","endLine":3,"endColumn":56},{"ruleId":"192","severity":1,"message":"193","line":11,"column":26,"nodeType":"194","messageId":"195","endLine":11,"endColumn":28},{"ruleId":"157","severity":1,"message":"198","line":2,"column":25,"nodeType":"159","messageId":"160","endLine":2,"endColumn":30},{"ruleId":"157","severity":1,"message":"199","line":2,"column":40,"nodeType":"159","messageId":"160","endLine":2,"endColumn":44},{"ruleId":"157","severity":1,"message":"200","line":2,"column":46,"nodeType":"159","messageId":"160","endLine":2,"endColumn":51},{"ruleId":"157","severity":1,"message":"201","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"202","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":31,"column":33,"nodeType":"205","endLine":31,"endColumn":132},{"ruleId":"180","severity":1,"message":"181","line":7,"column":5,"nodeType":"182","messageId":"183","endLine":10,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":69,"column":34,"nodeType":"194","messageId":"195","endLine":69,"endColumn":36},{"ruleId":"157","severity":1,"message":"190","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":5,"column":5,"nodeType":"182","messageId":"183","endLine":7,"endColumn":6},{"ruleId":"203","severity":1,"message":"204","line":27,"column":25,"nodeType":"205","endLine":27,"endColumn":132},{"ruleId":"157","severity":1,"message":"185","line":2,"column":16,"nodeType":"159","messageId":"160","endLine":2,"endColumn":21},{"ruleId":"157","severity":1,"message":"206","line":2,"column":32,"nodeType":"159","messageId":"160","endLine":2,"endColumn":41},{"ruleId":"157","severity":1,"message":"207","line":2,"column":61,"nodeType":"159","messageId":"160","endLine":2,"endColumn":72},{"ruleId":"157","severity":1,"message":"208","line":2,"column":23,"nodeType":"159","messageId":"160","endLine":2,"endColumn":29},{"ruleId":"157","severity":1,"message":"198","line":2,"column":31,"nodeType":"159","messageId":"160","endLine":2,"endColumn":36},{"ruleId":"157","severity":1,"message":"209","line":42,"column":17,"nodeType":"159","messageId":"160","endLine":42,"endColumn":29},{"ruleId":"157","severity":1,"message":"210","line":42,"column":31,"nodeType":"159","messageId":"160","endLine":42,"endColumn":43},{"ruleId":"157","severity":1,"message":"211","line":2,"column":23,"nodeType":"159","messageId":"160","endLine":2,"endColumn":30},{"ruleId":"157","severity":1,"message":"199","line":2,"column":32,"nodeType":"159","messageId":"160","endLine":2,"endColumn":36},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.",["212"],["213"],"'Route' is defined but never used.","'Switch' is defined but never used.",["212"],["213"],"'Button' is defined but never used.","'GridColumn' is defined but never used.","'submittedUsername' is assigned a value but never used.","'submittedPassword' is assigned a value but never used.",["212"],["213"],"'Divider' is defined but never used.","'FaPlus' is defined but never used.","'FaPlusSquare' is defined but never used.","'Chat' is defined but never used.","'FaPenSquare' is defined but never used.","'BsPencilSquare' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'GridRow' is defined but never used.","'Input' is defined but never used.","'messages' is assigned a value but never used.","react/jsx-no-undef","'VscFiles' is not defined.","JSXIdentifier","'Grid' is defined but never used.","'Modal' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FaHashtag' is defined but never used.","'FaUser' is defined but never used.","'Image' is defined but never used.","'Icon' is defined but never used.","'Popup' is defined but never used.","'FaPause' is defined but never used.","'VscInfo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'ButtonGroup' is defined but never used.","'Header' is defined but never used.","'channel_name' is assigned a value but never used.","'channel_desc' is assigned a value but never used.","'Segment' is defined but never used.","no-global-assign","no-unsafe-negation"]